"use strict";module.exports=function(r){require("source-map-support").install();var o=require("./core/opcua-iiot-core-server"),i=require("vm2").VM,n={};r.nodes.registerType("OPCUA-IIoT-Flex-Server",function(e){r.nodes.createNode(this,e),o.flex.internalDebugLog("Open Server Node");var t=o.readConfigOfServerNode(this,e);t=o.initServerNode(t),t=o.loadNodeSets(t,__dirname),t=o.loadCertificates(t),o.core.assert(t.bianco.iiot),t.bianco.iiot.vm=new i({require:{builtin:["fs","Math","Date","console"]},sandbox:{node:t,coreServer:o,scriptObjects:n,RED:r,sandboxNodeContext:{set:function(){t.context().set.apply(t,arguments)},get:function(){return t.context().get.apply(t,arguments)},keys:function(){return t.context().keys.apply(t,arguments)},get global(){return t.context().global},get flow(){return t.context().flow}},sandboxFlowContext:{set:function(){t.context().flow.set.apply(t,arguments)},get:function(){return t.context().flow.get.apply(t,arguments)},keys:function(){return t.context().flow.keys.apply(t,arguments)}},sandboxGlobalContext:{set:function(){t.context().global.set.apply(t,arguments)},get:function(){return t.context().global.get.apply(t,arguments)},keys:function(){return t.context().global.keys.apply(t,arguments)}},sandboxEnv:{get:function(e){return t._flow.getSetting(e)}}}}),t.bianco.iiot.constructAddressSpaceScript=function(e,r,t){e.internalDebugLog("Init Function Block Flex Server")},t.bianco.iiot.vm.run("node.bianco.iiot.constructAddressSpaceScript = "+e.addressSpaceScript),t.bianco.iiot.buildServerOptions=function(){var e=o.buildServerOptions(t,"Flex");return e.userManager={isValidUser:function(e,r){return o.checkUser(t,e,r)}},o.setDiscoveryOptions(t,e)},t.bianco.iiot.createServer=function(e){r.settings.verbose&&o.flex.detailDebugLog("serverOptions:"+JSON.stringify(e)),t.bianco.iiot.opcuaServer=o.createServerObject(t,e),o.core.setNodeStatusTo(t,"waiting"),t.bianco.iiot.opcuaServer.initialize(t.bianco.iiot.postInitialize),o.setOPCUAServerListener(t)},t.bianco.iiot.initNewServer=function(){var e=(t=o.initRegisterServerMethod(t)).bianco.iiot.buildServerOptions();e=o.setDiscoveryOptions(t,e);try{t.bianco.iiot.createServer(e)}catch(e){t.emit("server_create_error"),o.flex.internalDebugLog(e.message),o.handleServerError(t,e,{payload:"Flex Server Failure! Please, check the server settings!"})}},t.bianco.iiot.postInitialize=function(){t.bianco.iiot.eventObjects={},o.constructAddressSpaceFromScript(t.bianco.iiot.opcuaServer,t.bianco.iiot.constructAddressSpaceScript,t.bianco.iiot.eventObjects).then(function(){o.start(t.bianco.iiot.opcuaServer,t).then(function(){o.core.setNodeStatusTo(t,"active"),t.emit("server_running")}).catch(function(e){t.emit("server_start_error"),o.core.setNodeStatusTo(t,"errors"),o.handleServerError(t,e,{payload:"Server Start Failure"})})}).catch(function(e){o.handleServerError(t,e,{payload:"Server Address Space Failure"})})},t.bianco.iiot.initNewServer(),t.on("input",function(e){t.bianco.iiot.opcuaServer&&t.bianco.iiot.initialized?"CMD"===e.injectType?t.bianco.iiot.executeOpcuaCommand(e):o.handleServerError(t,new Error("Unknown Flex Inject Type "+e.injectType),e):o.handleServerError(t,new Error("Server Not Ready For Inputs"),e)}),t.bianco.iiot.executeOpcuaCommand=function(e){"restart"===e.commandType?(t.bianco.iiot.restartServer(),t.send(e)):o.handleServerError(t,new Error("Unknown Flex OPC UA Command"),e)},t.bianco.iiot.restartServer=function(){o.flex.internalDebugLog("Restart OPC UA Server"),o.restartServer(t),t.bianco.iiot.opcuaServer?o.flex.internalDebugLog("OPC UA Server restarted"):o.flex.internalDebugLog("Can not restart OPC UA Server")},t.on("close",function(e){o.core.isInitializedBiancoIIoTNode(t)?t.bianco.iiot.closeServer(function(){o.flex.internalDebugLog("Close Server Node"),o.core.resetBiancoNode(t),e()}):e()}),t.on("shutdown",function(){t.bianco.iiot.opcuaServer=null,t.bianco.iiot.initNewServer()}),t.bianco.iiot.closeServer=function(e){o.simulatorInterval&&(clearInterval(o.simulatorInterval),o.simulatorInterval=null),t.bianco.iiot.opcuaServer?(t.bianco.iiot.opcuaServer.removeAllListeners(),t.bianco.iiot.opcuaServer.shutdown(t.delayToClose,e)):e()}})};
//# sourceMappingURL=maps/opcua-iiot-flex-server.js.map
