"use strict";require("source-map-support").install();var de=de||{biancoroyal:{opcua:{iiot:{core:{method:{}}}}}};de.biancoroyal.opcua.iiot.core.method.core=de.biancoroyal.opcua.iiot.core.method.core||require("./opcua-iiot-core"),de.biancoroyal.opcua.iiot.core.method.internalDebugLog=de.biancoroyal.opcua.iiot.core.method.internalDebugLog||require("debug")("opcuaIIoT:method"),de.biancoroyal.opcua.iiot.core.method.detailDebugLog=de.biancoroyal.opcua.iiot.core.method.detailDebugLog||require("debug")("opcuaIIoT:method:details"),de.biancoroyal.opcua.iiot.core.method.getArgumentDefinition=function(o,e){var t=this.core.nodeOPCUA.coerceNodeId;return new Promise(function(a,d){if(o)try{var n=t(e.methodId);o.getArgumentDefinition(n,function(o,e,t){if(o)d(o);else{var i={};i.methodId=n,i.methodDefinition={},i.methodDefinition.inputArguments=e,i.methodDefinition.outputArguments=t,a(i)}})}catch(o){d(o)}else d(new Error("Method Argument Definition Session Not Valid"))})},de.biancoroyal.opcua.iiot.core.method.callMethods=function(e,a){var d=this.core,n=this.core.nodeOPCUA.coerceNodeId;return new Promise(function(t,i){if(e)try{a.inputArguments.forEach(function(o,e,t){o.value=d.convertDataValueByDataType({value:o.value},o.dataType)});var o=[{objectId:n(a.objectId),methodId:n(a.methodId),inputArguments:a.inputArguments}];e.call(o,function(o,e){o?i(o):t({results:e,msg:a})})}catch(o){i(o)}else i(new Error("Methods Call Session Not Valid"))})},de.biancoroyal.opcua.iiot.core.method.buildMessagesFromMethodCalls=function(t){return new Promise(function(o,e){if(t){o({methodCallsResults:t,messages:[]})}else e(new Error("Methods Call Results To Messages Session Not Valid"))})},de.biancoroyal.opcua.iiot.core.method.invalidMessage=function(o,e){var t=!1;return e.objectId||(o.bianco.iiot.handleMethodWarn("No Object-Id Found For Method Call"),t=!0),e.methodId||(o.bianco.iiot.handleMethodWarn("No Method-Id Found For Method Call"),t=!0),e.inputArguments||(o.bianco.iiot.handleMethodWarn("No Input Arguments Found For Method Call"),t=!0),e.methodType||(o.bianco.iiot.handleMethodWarn("No Method Type Found For Method Call"),t=!0),t},de.biancoroyal.opcua.iiot.core.method.buildCallMessage=function(o,e){var t=e;return t.objectId=e.payload.objectId||o.objectId,t.methodId=e.payload.methodId||o.methodId,t.methodType=e.payload.methodType||o.methodType,t.inputArguments=e.payload.inputArguments||o.inputArguments,t.nodetype="method",t},module.exports=de.biancoroyal.opcua.iiot.core.method;
//# sourceMappingURL=../maps/core/opcua-iiot-core-method.js.map
