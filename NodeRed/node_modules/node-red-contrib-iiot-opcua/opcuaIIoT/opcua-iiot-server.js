"use strict";module.exports=function(r){require("source-map-support").install();var i=require("./core/opcua-iiot-core-server");r.nodes.registerType("OPCUA-IIoT-Server",function(e){r.nodes.createNode(this,e),i.internalDebugLog("Open Server Node"),this.asoDemo=e.asoDemo;var o=i.readConfigOfServerNode(this,e);o=i.initServerNode(o),o=i.loadNodeSets(o,__dirname),o=i.loadCertificates(o),i.core.assert(o.bianco.iiot),o.bianco.iiot.buildServerOptions=function(){var e=i.buildServerOptions(o,"Fix");return e.userManager={isValidUser:function(e,r){return i.checkUser(o,e,r)}},i.setDiscoveryOptions(o,e)},o.bianco.iiot.createServer=function(e){r.settings.verbose&&i.detailDebugLog("serverOptions:"+JSON.stringify(e)),o.bianco.iiot.opcuaServer=i.createServerObject(o,e),i.core.setNodeStatusTo(o,"waiting"),o.bianco.iiot.opcuaServer.initialize(o.bianco.iiot.postInitialize),i.setOPCUAServerListener(o)},o.bianco.iiot.initNewServer=function(){var e=(o=i.initRegisterServerMethod(o)).bianco.iiot.buildServerOptions();e=i.setDiscoveryOptions(o,e);try{o.bianco.iiot.createServer(e)}catch(e){o.emit("server_create_error"),i.handleServerError(o,e,{payload:"Server Failure! Please, check the server settings!"})}},o.bianco.iiot.postInitialize=function(){i.constructAddressSpace(o.bianco.iiot.opcuaServer,o.asoDemo).then(function(e){e?i.handleServerError(o,e,{payload:"Server Address Space Problem"}):i.start(o.bianco.iiot.opcuaServer,o).then(function(){i.core.setNodeStatusTo(o,"active"),o.emit("server_running")}).catch(function(e){i.core.isInitializedBiancoIIoTNode(o)&&(o.bianco.iiot.opcuaServer=null),o.emit("server_start_error"),i.core.setNodeStatusTo(o,"errors"),i.handleServerError(o,e,{payload:"Server Start Failure"})})}).catch(function(e){i.handleServerError(o,e,{payload:"Server Address Space Failure"})})},o.bianco.iiot.initNewServer(),o.on("input",function(e){if(o.bianco.iiot.opcuaServer&&o.bianco.iiot.initialized){switch(e.injectType){case"ASO":o.bianco.iiot.changeAddressSpace(e);break;case"CMD":o.bianco.iiot.executeOpcuaCommand(e);break;default:i.handleServerError(o,new Error("Unknown Inject Type "+e.injectType),e)}o.send(e)}else i.handleServerError(o,new Error("Server Not Ready For Inputs"),e)}),o.bianco.iiot.changeAddressSpace=function(e){e.payload.objecttype&&-1<e.payload.objecttype.indexOf("Variable")?i.addVariableToAddressSpace(o,e,e.payload.objecttype,!1):e.payload.objecttype&&-1<e.payload.objecttype.indexOf("Property")?i.addVariableToAddressSpace(o,e,e.payload.objecttype,!0):i.addObjectToAddressSpace(o,e,e.payload.objecttype)},o.bianco.iiot.executeOpcuaCommand=function(e){switch(e.commandType){case"restart":o.bianco.iiot.restartServer();break;case"deleteNode":i.deleteNOdeFromAddressSpace(o,e);break;default:i.handleServerError(o,new Error("Unknown OPC UA Command"),e)}},o.bianco.iiot.restartServer=function(){i.internalDebugLog("Restart OPC UA Server"),i.restartServer(o),o.bianco.iiot.opcuaServer?i.internalDebugLog("OPC UA Server restarted"):i.internalDebugLog("Can not restart OPC UA Server")},o.on("close",function(e){i.core.isInitializedBiancoIIoTNode(o)?o.bianco.iiot.closeServer(function(){i.internalDebugLog("Close Server Node"),i.core.resetBiancoNode(o),e()}):e()}),o.on("shutdown",function(){o.bianco.iiot.opcuaServer=null,o.bianco.iiot.initNewServer()}),o.bianco.iiot.closeServer=function(e){i.destructAddressSpace(function(){o.bianco.iiot.opcuaServer.removeAllListeners(),o.bianco.iiot.opcuaServer.shutdown(o.delayToClose,e)})}})};
//# sourceMappingURL=maps/opcua-iiot-server.js.map
