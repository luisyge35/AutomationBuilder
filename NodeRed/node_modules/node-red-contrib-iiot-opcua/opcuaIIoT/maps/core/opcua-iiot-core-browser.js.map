{"version":3,"sources":["core/opcua-iiot-core-browser.js"],"names":["require","install","de","biancoroyal","opcua","iiot","core","browser","crawler","internalDebugLog","detailDebugLog","browse","session","nodeIdToBrowse","this","reject","browseOptions","nodeId","referenceTypeId","includeSubtypes","browseDirection","coreBrowser","nodeOPCUA","browse_service","BrowseDirection","Forward","resultMask","requestedMaxReferencesPerNode","err","browseResult","Promise","push","continuationPoint","browseNext","then","browseResults","browseAddressSpaceItems","addressSpaceItems","item","createCrawler","assert","crawl","nodeIdToCrawl","msg","message","Object","assign","crawlerResult","data","cacheNode","NodeCrawler","resolve","rootNodeId","Error","crawlAddressSpaceItems","onBrowse","follow","forEach","browseToRoot","OBJECTS_ROOT","extractNodeIdFromTopic","node","payload","actiontype","root","transformToEntry","reference","toJSON","toString","isForward","browseName","displayName","nodeClass","typeDefinition","initBrowserNode","initClientNode","browseTopic","bianco","messageList","lists","error","isSessionBad","_typeof","results","length","browseErrorHandling"],"mappings":"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","file":"../../core/opcua-iiot-core-browser.js","sourcesContent":["/**\n The BSD 3-Clause License\n\n Copyright 2017,2018,2019 - Klaus Landsdorf (https://bianco-royal.com/)\n Copyright 2015,2016 - Mika Karaila, Valmet Automation Inc. (node-red-contrib-opcua)\n All rights reserved.\n node-red-contrib-iiot-opcua\n */\n'use strict'\nrequire('source-map-support').install()\n\n/**\n * Nested namespace settings.\n *\n * @type {{biancoroyal: {opcua: {iiot: {core: {browser: {}}}}}}}\n *\n * @Namesapce de.biancoroyal.opcua.iiot.core.browser\n */\nvar de = de || { biancoroyal: { opcua: { iiot: { core: { browser: { crawler: {} } } } } } } // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.browser.core = de.biancoroyal.opcua.iiot.core.browser.core || require('./opcua-iiot-core') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.browser.internalDebugLog = de.biancoroyal.opcua.iiot.core.browser.internalDebugLog || require('debug')('opcuaIIoT:browser') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.browser.detailDebugLog = de.biancoroyal.opcua.iiot.core.browser.detailDebugLog || require('debug')('opcuaIIoT:browser:details') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.browser.crawler.internalDebugLog = de.biancoroyal.opcua.iiot.core.browser.crawler.internalDebugLog || require('debug')('opcuaIIoT:browser:crawler') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.browser.crawler.detailDebugLog = de.biancoroyal.opcua.iiot.core.browser.crawler.detailDebugLog || require('debug')('opcuaIIoT:browser:crawler:details') // eslint-disable-line no-use-before-define\n\nde.biancoroyal.opcua.iiot.core.browser.browse = function (session, nodeIdToBrowse) {\n  let coreBrowser = this\n  return new Promise(\n    function (resolve, reject) {\n      let browseOptions = [\n        {\n          nodeId: nodeIdToBrowse,\n          referenceTypeId: 'Organizes',\n          includeSubtypes: true,\n          browseDirection: coreBrowser.core.nodeOPCUA.browse_service.BrowseDirection.Forward,\n          resultMask: 63\n        },\n        {\n          nodeId: nodeIdToBrowse,\n          referenceTypeId: 'Aggregates',\n          includeSubtypes: true,\n          browseDirection: coreBrowser.core.nodeOPCUA.browse_service.BrowseDirection.Forward,\n          resultMask: 63\n        }\n      ]\n      session.requestedMaxReferencesPerNode = 5000\n      session.browse(browseOptions, function (err, browseResult) {\n        if (err) {\n          reject(err)\n        } else {\n          let browseResults = []\n          browseResults.push(browseResult)\n          let continuationPoint = browseResult.continuationPoint\n          while (continuationPoint) {\n            session.browseNext(continuationPoint, false).then(function (browseResult) {\n              browseResults.push(browseResult)\n              continuationPoint = browseResult.continuationPoint\n            })\n          }\n          resolve(browseResults)\n        }\n      })\n    }\n  )\n}\n\nde.biancoroyal.opcua.iiot.core.browser.browseAddressSpaceItems = function (session, addressSpaceItems) {\n  let coreBrowser = this\n  return new Promise(\n    function (resolve, reject) {\n      let browseOptions = []\n\n      addressSpaceItems.forEach(function (item) {\n        browseOptions.push({\n          nodeId: item.nodeId,\n          referenceTypeId: 'Organizes',\n          includeSubtypes: true,\n          browseDirection: coreBrowser.core.nodeOPCUA.browse_service.BrowseDirection.Forward,\n          resultMask: 63\n        })\n\n        browseOptions.push({\n          nodeId: item.nodeId,\n          referenceTypeId: 'Aggregates',\n          includeSubtypes: true,\n          browseDirection: coreBrowser.core.nodeOPCUA.browse_service.BrowseDirection.Forward,\n          resultMask: 63\n        })\n      })\n\n      session.browse(browseOptions, function (err, browseResult) {\n        if (err) {\n          reject(err)\n        } else {\n          let browseResults = []\n          browseResults.push(browseResult)\n          let continuationPoint = browseResult.continuationPoint\n          while (continuationPoint) {\n            session.browseNext(continuationPoint, false).then(function (browseResult) {\n              browseResults.push(browseResult)\n              continuationPoint = browseResult.continuationPoint\n            })\n          }\n          resolve(browseResults)\n        }\n      })\n    }\n  )\n}\n\nde.biancoroyal.opcua.iiot.core.browser.createCrawler = function (session) {\n  this.core.assert(session !== null)\n  return new this.core.nodeOPCUA.NodeCrawler(session)\n}\n\nde.biancoroyal.opcua.iiot.core.browser.crawl = function (session, nodeIdToCrawl, msg) {\n  let coreBrowser = this\n  return new Promise(\n    function (resolve, reject) {\n      if (!nodeIdToCrawl) {\n        reject(new Error('NodeId To Crawl Not Valid'))\n        return\n      }\n\n      const message = Object.assign({}, msg)\n      const crawler = coreBrowser.createCrawler(session)\n      let crawlerResult = []\n\n      const data = {\n        onBrowse: function (crawler, cacheNode) {\n          crawlerResult.push(cacheNode)\n          coreBrowser.core.nodeOPCUA.NodeCrawler.follow(crawler, cacheNode, this)\n        }\n      }\n\n      crawler.crawl(nodeIdToCrawl, data, function (err) {\n        if (err) {\n          reject(err)\n        } else {\n          resolve({ rootNodeId: nodeIdToCrawl, message, crawlerResult })\n        }\n      })\n    })\n}\n\nde.biancoroyal.opcua.iiot.core.browser.crawlAddressSpaceItems = function (session, msg) {\n  let coreBrowser = this\n  return new Promise(\n    function (resolve, reject) {\n      if (!msg.addressSpaceItems) {\n        reject(new Error('AddressSpace Items Not Valid To Crawl'))\n        return\n      }\n\n      const message = Object.assign({}, msg)\n      const crawler = coreBrowser.createCrawler(session)\n      let crawlerResult = []\n\n      const data = {\n        onBrowse (crawler, cacheNode) {\n          if (!cacheNode) {\n            coreBrowser.internalDebugLog('Item Not To Crawl - Missing NodeId')\n          }\n          crawlerResult.push(cacheNode)\n          coreBrowser.core.nodeOPCUA.NodeCrawler.follow(crawler, cacheNode, this)\n        }\n      }\n\n      message.addressSpaceItems.forEach((item) => {\n        if (!item.nodeId) {\n          coreBrowser.internalDebugLog('Item Not To Crawl - Missing NodeId')\n          return\n        }\n\n        crawler.crawl(item.nodeId, data, function (err) {\n          if (err) {\n            reject(err)\n          } else {\n            resolve({ rootNodeId: item.nodeId, message, crawlerResult })\n          }\n        })\n      })\n    })\n}\n\nde.biancoroyal.opcua.iiot.core.browser.browseToRoot = function () {\n  this.detailDebugLog('Browse To Root ' + this.core.OBJECTS_ROOT)\n  return this.core.OBJECTS_ROOT\n}\n\nde.biancoroyal.opcua.iiot.core.browser.extractNodeIdFromTopic = function (msg, node) {\n  let rootNodeId = null\n\n  if (msg.payload.actiontype === 'browse') { // event driven browsing\n    if (msg.payload.root && msg.payload.root.nodeId) {\n      this.internalDebugLog('Root Selected External ' + msg.payload.root)\n      rootNodeId = msg.payload.root.nodeId\n    } else {\n      rootNodeId = node.nodeId\n    }\n    this.detailDebugLog('Extracted NodeId ' + rootNodeId)\n\n    rootNodeId = rootNodeId || this.browseToRoot()\n  }\n\n  return rootNodeId\n}\n\nde.biancoroyal.opcua.iiot.core.browser.transformToEntry = function (reference) {\n  if (reference) {\n    try {\n      return reference.toJSON()\n    } catch (err) {\n      this.internalDebugLog(err)\n\n      if (reference.referenceTypeId) {\n        return {\n          referenceTypeId: reference.referenceTypeId.toString(),\n          isForward: reference.isForward,\n          nodeId: reference.nodeId.toString(),\n          browseName: reference.browseName.toString(),\n          displayName: reference.displayName.toString(),\n          nodeClass: reference.nodeClass.toString(),\n          typeDefinition: reference.typeDefinition.toString()\n        }\n      }\n    }\n  } else {\n    this.internalDebugLog('Empty Reference On Browse')\n  }\n  return reference\n}\n\nde.biancoroyal.opcua.iiot.core.browser.initBrowserNode = function (node) {\n  this.core.initClientNode(node)\n  node.browseTopic = this.core.OBJECTS_ROOT\n  node.bianco.iiot.items = []\n  node.bianco.iiot.messageList = []\n  return node\n}\n\nde.biancoroyal.opcua.iiot.core.browser.browseErrorHandling = function (node, err, msg, lists) {\n  let results = lists.browserResults || []\n\n  if (err) {\n    this.internalDebugLog(typeof node + 'Error ' + err)\n    if (node.showErrors) {\n      node.error(err, msg)\n    }\n\n    if (this.core.isSessionBad(err)) {\n      node.emit('opcua_client_not_ready')\n    }\n  } else {\n    this.internalDebugLog(typeof node + ' Done With Error')\n    if (results.length) {\n      this.detailDebugLog(results.length + 'items in lists of browser results')\n    }\n  }\n\n  if (node.showStatusActivities) {\n    this.core.setNodeStatusTo(node, 'error')\n  }\n}\n\nmodule.exports = de.biancoroyal.opcua.iiot.core.browser\n"]}