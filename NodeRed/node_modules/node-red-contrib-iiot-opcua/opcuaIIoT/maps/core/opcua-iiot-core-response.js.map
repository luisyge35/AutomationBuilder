{"version":3,"sources":["core/opcua-iiot-core-response.js"],"names":["require","install","de","biancoroyal","opcua","iiot","core","response","internalDebugLog","detailDebugLog","EMPTY_LIST","NONE","analyzeBrowserResults","node","msg","this","handlePayloadStatusCode","analyzeCrawlerResults","analyzeReadResults","readtype","payload","length","item","reconsturctNodeIdOnRead","analyzeListenerResults","injectType","analyzeMethodResults","methodType","setNodeStatus","entryStatus","informationText","fillColor","status","text","analyzeWriteResults","handlePayloadArrayOfStatusCodes","setNodeStatusInfo","analyzeSubscribeResultStatus","analyzeEventResultStatus","results","browserResults","crawlerResults","statusCodes","handlePayloadArrayOfObjects","handlePayloadObject","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","entry","value","statusCode","name","entryStatusText","includes","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","defaultCompress","hasOwnProperty","forEach","trimMessageExtensions","filter","compressFilteredMessage","trimMessagePayloadExtensions","compressBrowseMessageStructure","itemList","push","toString","browseName","namespaceIndex","displayName","compressCrawlerMessageStructure","nodeId","nodesToRead","index","addressSpaceItems","dataType","compressVariableValueMessage","compressReadMessageStructure","compressWriteMessageStructure","nodesToWrite","valuesToWrite","compressListenMessageStructure","compressMethodMessageStructure"],"mappings":"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","file":"../../core/opcua-iiot-core-response.js","sourcesContent":["/**\n The BSD 3-Clause License\n\n Copyright 2016,2017,2018,2019 - Klaus Landsdorf (https://bianco-royal.com/)\n Copyright 2015,2016 - Mika Karaila, Valmet Automation Inc. (node-red-contrib-opcua)\n All rights reserved.\n node-red-contrib-iiot-opcua\n */\n'use strict'\nrequire('source-map-support').install()\n\n/**\n * Nested namespace settings.\n *\n * @type {{biancoroyal: {opcua: {iiot: {core: {response: {}}}}}}}\n *\n * @Namesapce de.biancoroyal.opcua.iiot.core.response\n */\nvar de = de || { biancoroyal: { opcua: { iiot: { core: { response: {} } } } } } // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.response.core = de.biancoroyal.opcua.iiot.core.response.core || require('./opcua-iiot-core') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.response.internalDebugLog = de.biancoroyal.opcua.iiot.core.response.internalDebugLog || require('debug')('opcuaIIoT:response') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.response.detailDebugLog = de.biancoroyal.opcua.iiot.core.response.detailDebugLog || require('debug')('opcuaIIoT:response:details') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.response.EMPTY_LIST = 0\nde.biancoroyal.opcua.iiot.core.response.NONE = 0\n\nde.biancoroyal.opcua.iiot.core.response.analyzeBrowserResults = function (node, msg) {\n  this.handlePayloadStatusCode(node, msg)\n}\n\nde.biancoroyal.opcua.iiot.core.response.analyzeCrawlerResults = function (node, msg) {\n  this.handlePayloadStatusCode(node, msg)\n}\n\nde.biancoroyal.opcua.iiot.core.response.analyzeReadResults = function (node, msg) {\n  this.handlePayloadStatusCode(node, msg)\n  if (msg.readtype === 'HistoryValue' && msg.payload && msg.payload.length) {\n    msg.payload.forEach((item) => {\n      delete item['statusCode']\n    })\n  }\n  this.reconsturctNodeIdOnRead(msg)\n}\n\nde.biancoroyal.opcua.iiot.core.response.analyzeListenerResults = function (node, msg) {\n  switch (msg.injectType) {\n    case 'subscribe':\n      this.analyzeSubscribeResultStatus(node, msg)\n      break\n    case 'event':\n      this.analyzeEventResultStatus(node, msg)\n      break\n    default:\n      break\n  }\n}\n\nde.biancoroyal.opcua.iiot.core.response.analyzeMethodResults = function (node, msg) {\n  switch (msg.methodType) {\n    case 'basic':\n      this.handlePayloadStatusCode(node, msg)\n      break\n    case 'complex':\n      this.handlePayloadStatusCode(node, msg)\n      break\n    default:\n      break\n  }\n}\n\nde.biancoroyal.opcua.iiot.core.response.setNodeStatus = function (node, entryStatus, informationText) {\n  let fillColor = 'green'\n\n  if (entryStatus && entryStatus.length === 3) {\n    if (entryStatus[2] > this.EMPTY_LIST) {\n      fillColor = 'yellow'\n    }\n\n    if (entryStatus[1] > this.EMPTY_LIST) {\n      fillColor = 'red'\n    }\n  }\n\n  if (node.status.text !== informationText) {\n    node.status({ fill: fillColor, shape: 'dot', text: informationText })\n  }\n}\n\nde.biancoroyal.opcua.iiot.core.response.analyzeWriteResults = function (node, msg) {\n  let entryStatus = this.handlePayloadArrayOfStatusCodes(msg)\n  this.setNodeStatusInfo(node, msg, entryStatus)\n}\n\nde.biancoroyal.opcua.iiot.core.response.analyzeSubscribeResultStatus = function (node, msg) {\n  this.handlePayloadStatusCode(node, msg)\n}\n\nde.biancoroyal.opcua.iiot.core.response.analyzeEventResultStatus = function (node, msg) {\n  this.handlePayloadStatusCode(node, msg)\n}\n\nde.biancoroyal.opcua.iiot.core.response.handlePayloadStatusCode = function (node, msg) {\n  let entryStatus = [0, 0, 0]\n\n  if (msg.payload.length || msg.payload.results || msg.payload.browserResults || msg.payload.crawlerResults || msg.payload.statusCodes) {\n    entryStatus = this.handlePayloadArrayOfObjects(msg)\n  } else {\n    entryStatus = this.handlePayloadObject(msg)\n  }\n  this.setNodeStatusInfo(node, msg, entryStatus)\n}\n\nde.biancoroyal.opcua.iiot.core.response.setNodeStatusInfo = function (node, msg, entryStatus) {\n  msg.entryStatus = entryStatus\n  msg.entryStatusText = 'Good:' + entryStatus[0] + ' Bad:' + entryStatus[1] + ' Other:' + entryStatus[2]\n  this.setNodeStatus(node, msg.entryStatus, msg.entryStatusText)\n}\n\nde.biancoroyal.opcua.iiot.core.response.handlePayloadArrayOfObjects = function (msg) {\n  let entry = null\n  let entryStatus = [0, 0, 0]\n  let results = []\n\n  if (msg.payload.results) {\n    results = msg.payload.results\n  } else if (msg.payload.browserResults) {\n    results = msg.payload.browserResults\n  } else if (msg.payload.crawlerResults) {\n    results = msg.payload.crawlerResults\n  } else if (msg.payload.statusCodes) {\n    results = msg.payload.statusCodes\n  } else {\n    if (msg.payload.length) { results = msg.payload }\n  }\n\n  for (entry of results) {\n    if (entry.statusCode && entry.statusCode.name) {\n      switch (entry.statusCode.name) {\n        case 'Good':\n          entryStatus[0] += 1\n          break\n        case 'Bad':\n          entryStatus[1] += 1\n          break\n        default:\n          if (entry.statusCode.name.includes('Good')) {\n            entryStatus[0] += 1\n          } else if (entry.statusCode.name.includes('Bad')) {\n            entryStatus[1] += 1\n          } else {\n            entryStatus[2] += 1\n          }\n      }\n    } else {\n      entryStatus[2] += 1\n    }\n  }\n\n  return entryStatus\n}\n\nde.biancoroyal.opcua.iiot.core.response.handlePayloadObject = function (msg) {\n  let entryStatus = [0, 0, 0]\n\n  if (msg.payload.results || msg.payload.statusCodes) {\n    entryStatus = this.handlePayloadArrayOfObjects(msg)\n  }\n\n  if (msg.payload && msg.payload.statusCode) {\n    if (msg.payload.statusCode.name) {\n      switch (msg.payload.statusCode.name) {\n        case 'Good':\n          entryStatus[0] += 1\n          break\n        case 'Bad':\n          entryStatus[1] += 1\n          break\n        default:\n          if (msg.payload.statusCode.name.includes('Good')) {\n            entryStatus[0] += 1\n          } else if (msg.payload.statusCode.name.includes('Bad')) {\n            entryStatus[1] += 1\n          } else {\n            entryStatus[2] += 1\n          }\n      }\n    } else {\n      entryStatus[2] += 1\n    }\n  } else {\n    entryStatus[2] += 1\n  }\n\n  return entryStatus\n}\n\nde.biancoroyal.opcua.iiot.core.response.handlePayloadArrayOfStatusCodes = function (msg) {\n  let entry = null\n  let entryStatus = [0, 0, 0]\n\n  if (msg.payload.statusCodes) {\n    for (entry of msg.payload.statusCodes) {\n      if (entry && entry.name) {\n        switch (entry.name) {\n          case 'Good':\n            entryStatus[0] += 1\n            break\n          case 'Bad':\n            entryStatus[1] += 1\n            break\n          default:\n            if (entry.name.includes('Good')) {\n              entryStatus[0] += 1\n            } else if (entry.name.includes('Bad')) {\n              entryStatus[1] += 1\n            } else {\n              entryStatus[2] += 1\n            }\n        }\n      } else {\n        entryStatus[2] += 1\n      }\n    }\n  } else {\n    entryStatus[2] += 1\n  }\n\n  return entryStatus\n}\n\nde.biancoroyal.opcua.iiot.core.response.defaultCompress = function (msg) {\n  if (msg.payload.hasOwnProperty('value') && msg.payload.value.hasOwnProperty('value')) {\n    msg.payload = msg.payload.value.value\n  } else {\n    if (msg.payload.length) {\n      msg.payload.forEach((item) => {\n        if (item.hasOwnProperty('value') && item.value.hasOwnProperty('value')) {\n          item = item.value.value\n        }\n      })\n    }\n  }\n  this.trimMessageExtensions(msg)\n}\n\nde.biancoroyal.opcua.iiot.core.response.trimMessageExtensions = function (msg) {\n  delete msg['nodesToRead']\n  delete msg['nodesToReadCount']\n  delete msg['addressItemsToRead']\n  delete msg['addressItemsToReadCount']\n  delete msg['addressItemsToBrowse']\n  delete msg['addressItemsToBrowseCount']\n  delete msg['addressSpaceItems']\n  delete msg['injectType']\n  delete msg['nodetype']\n  delete msg['entryStatus']\n  delete msg['entryStatusText']\n\n  if (msg.filter) {\n    msg = this.compressFilteredMessage(msg)\n  }\n}\n\nde.biancoroyal.opcua.iiot.core.response.trimMessagePayloadExtensions = function (msg) {\n  delete msg.payload['listenerParameters']\n}\n\nde.biancoroyal.opcua.iiot.core.response.compressBrowseMessageStructure = function (msg) {\n  if (msg.payload.hasOwnProperty('browserResults') && msg.payload.browserResults.length) {\n    let itemList = []\n    msg.payload.browserResults.forEach((item) => {\n      itemList.push({\n        nodeId: item.nodeId.toString(),\n        browseName: (item.browseName.namespaceIndex) ? item.browseName.namespaceIndex + ':' + item.browseName.name : item.browseName,\n        displayName: item.displayName.text\n      })\n    })\n    msg.payload = itemList\n    this.trimMessageExtensions(msg)\n    this.trimMessagePayloadExtensions(msg)\n  } else {\n    this.defaultCompress(msg)\n  }\n}\n\nde.biancoroyal.opcua.iiot.core.response.compressCrawlerMessageStructure = function (msg) {\n  if (msg.payload.hasOwnProperty('crawlerResults') && msg.payload.crawlerResults.length) {\n    let itemList = []\n    msg.payload.crawlerResults.forEach((item) => {\n      itemList.push({\n        nodeId: item.nodeId.toString(),\n        browseName: (item.browseName.namespaceIndex) ? item.browseName.namespaceIndex + ':' + item.browseName.name : item.browseName,\n        displayName: item.displayName.text\n      })\n    })\n    msg.payload = itemList\n    this.trimMessageExtensions(msg)\n    this.trimMessagePayloadExtensions(msg)\n  } else {\n    this.defaultCompress(msg)\n  }\n}\n\nde.biancoroyal.opcua.iiot.core.response.reconsturctNodeIdOnRead = function (msg) {\n  let itemList = []\n  let results = msg.payload.results || msg.payload\n  let nodesToRead = msg.nodesToRead\n\n  if (results && results.length) {\n    results.forEach((item, index) => {\n      if (item.hasOwnProperty('value') && item.value.hasOwnProperty('value')) {\n        let nodeId = null\n        if (nodesToRead && index < nodesToRead.length) {\n          nodeId = nodesToRead[index]\n        } else {\n          if (msg.addressSpaceItems && index < msg.addressSpaceItems.length) {\n            nodeId = msg.addressSpaceItems[index]\n          }\n        }\n\n        itemList.push({\n          value: item.value.value,\n          dataType: item.value.dataType,\n          nodeId\n        })\n      } else {\n        itemList.push(item)\n      }\n    })\n\n    msg.payload = itemList\n  }\n}\n\nde.biancoroyal.opcua.iiot.core.response.compressVariableValueMessage = function (msg) {\n  delete msg['nodesToRead']\n  delete msg['nodesToReadCount']\n  delete msg['addressSpaceItems']\n\n  return msg\n}\n\nde.biancoroyal.opcua.iiot.core.response.compressFilteredMessage = function (msg) {\n  delete msg['filter']\n  delete msg['filtertype']\n}\n\nde.biancoroyal.opcua.iiot.core.response.compressReadMessageStructure = function (msg) {\n  switch (msg.readtype) {\n    case 'AllAttributes':\n      delete msg.payload['nodesToRead']\n      delete msg['resultsConverted']\n      break\n    case 'VariableValue':\n      msg = this.compressVariableValueMessage(msg)\n      break\n    default:\n      break\n  }\n\n  delete msg['readtype']\n  delete msg['attributeId']\n\n  delete msg['addressItemsToRead']\n  delete msg['addressItemsToReadCount']\n\n  this.trimMessageExtensions(msg)\n}\n\nde.biancoroyal.opcua.iiot.core.response.compressWriteMessageStructure = function (msg) {\n  this.defaultCompress(msg)\n\n  let itemList = []\n  msg.payload.statusCodes.forEach((item, index) => {\n    itemList.push({\n      nodeId: (msg.payload.nodesToWrite) ? msg.payload.nodesToWrite[index] : msg.addressSpaceItems[index],\n      statusCode: item,\n      value: (msg.valuesToWrite) ? msg.valuesToWrite[index] : null\n    })\n  })\n  msg.payload = itemList\n\n  delete msg['valuesToWrite']\n}\n\nde.biancoroyal.opcua.iiot.core.response.compressListenMessageStructure = function (msg) {\n  if (msg.payload.hasOwnProperty('value') && msg.payload.value.hasOwnProperty('value')) {\n    msg.payload = {\n      value: msg.payload.value.value,\n      dataType: msg.payload.value.dataType,\n      nodeId: (msg.addressSpaceItems[0].nodeId) ? msg.addressSpaceItems[0].nodeId : msg.addressSpaceItems[0]\n    }\n  } else {\n    if (msg.payload.length) {\n      let itemList = []\n      msg.payload.forEach((item, index) => {\n        if (item.hasOwnProperty('value') && item.value.hasOwnProperty('value')) {\n          itemList.push({\n            value: item.value.value,\n            dataType: item.value.dataType,\n            nodeId: (msg.addressSpaceItems[index].nodeId) ? msg.addressSpaceItems[index].nodeId : msg.addressSpaceItems[index]\n          })\n        }\n      })\n      msg.payload = itemList\n    }\n  }\n  this.trimMessageExtensions(msg)\n}\n\nde.biancoroyal.opcua.iiot.core.response.compressMethodMessageStructure = function (msg) {\n  this.defaultCompress(msg)\n  this.trimMessageExtensions(msg)\n\n  delete msg['inputArguments']\n  delete msg['objectId']\n  delete msg['methodId']\n  delete msg['methodType']\n\n  delete msg.payload['definition']\n}\n\nde.biancoroyal.opcua.iiot.core.response.compressDefaultMessageStructure = function (msg) {\n  this.defaultCompress(msg)\n  this.trimMessageExtensions(msg)\n}\n\nmodule.exports = de.biancoroyal.opcua.iiot.core.response\n"]}