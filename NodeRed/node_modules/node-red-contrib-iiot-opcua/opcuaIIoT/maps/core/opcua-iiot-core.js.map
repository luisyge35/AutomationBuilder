{"version":3,"sources":["core/opcua-iiot-core.js"],"names":["require","install","de","biancoroyal","opcua","iiot","core","nodeOPCUA","nodeOPCUAId","internalDebugLog","detailDebugLog","specialDebugLog","OBJECTS_ROOT","TEN_SECONDS_TIMEOUT","RUNNING_STATE","os","assert","underscore","isWindows","test","platform","FAKTOR_SEC_TO_MSEC","endianness","arch","getPathFromRequireResolve","requireResolve","pathToNodeOPCUA","replace","this","getNodeOPCUAPath","getNodeOPCUAClientPath","DEFAULT_TIMEOUT","resolve","getTimeUnitName","unit","unitAbbreviation","time","convertedTime","buildBrowseMessage","topic","nodeId","browseName","nodeClassType","payload","toInt32","x","uintSixteen","Math","pow","getNodeStatus","statusValue","statusLog","fillValue","shapeValue","shape","status","buildNewVariant","datatype","value","arraytype","dimensions","variantValue","VariantArrayType","Scalar","Matrix","buildNewMatrixVariant","Array","buildNewArrayVariant","buildNewScalarVariant","JSON","stringify","flattenMatrixValue","depth","flattened","isArray","Error","length","i","inferedDimensions","every","e","b","flattenedValue","arrayType","dataType","DataType","Float","push","parseFloat","Double","UInt16","uint16","UInt32","uint32","Uint32Array","Int32","parseInt","Int16","Int64","Boolean","Uint16Array","LocalizedText","DateTime","Date","getBasicDataTypes","forEach","item","name","String","datatypeList","parse","getVariantValue","UInt64","toString","Null","SByte","Byte","Guid","ByteString","XmlElement","NodeId","ExpandedNodeId","StatusCode","ExtensionObject","DataValue","Variant","DiagnosticInfo","convertDataValue","convertDataValueByDataType","convertedValue","valueType","_typeof","NodeIdType","QualifiedName","isNaN","err","regex_ns_i","regex_ns_s","regex_ns_g","nodeNamespace","msg","nodeItem","substring","indexOf","parseForNodeIdentifier","nodeIdentifier","includes","identifier","type","NUMERIC","GUID","BYTESTRING","STRING","parseIdentifierFromMsgTopic","parseIdentifierFromItemNodeId","parseNamspaceFromItemNodeId","namespace","newOPCUANodeIdFromMsgTopic","parseNamspaceFromMsgTopic","pushItemToWriteList","nodesToWrite","attributeId","AttributeIds","Value","buildNodesToWrite","addressSpaceItems","itemList","index","_step","_iterator","Symbol","iterator","_iteratorNormalCompletion","next","done","datatypeName","valuesToWrite","arraytypeName","_step2","_iterator2","_iteratorNormalCompletion2","buildNodesToRead","nodesToRead","nodePayloadList","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","undefined","_step3","_iterator3","return","nodeList","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","hasOwnProperty","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","buildNodesToListen","addressItemsToRead","buildNodesFromBrowser","browserResults","buildNodesFromCrawler","buildNodeListFromClient","nodetype","isSessionBad","nodeState","node","bianco","opcuaClient","connector","setNodeStatusTo","opcuaSession","newOPCUANodeIdFromItemNodeId","isNodeId","identifierType","indexRange","checkConnectorState","callerType","stateMachine","getMachineState","emit","setNodeOPCUAConnected","isInitializedBiancoIIoTNode","setNodeOPCUAClosed","setNodeOPCUALost","setNodeOPCUASessionStarted","setNodeOPCUASessionClosed","setNodeOPCUARestart","registerToConnector","registerForOPCUA","on","setNodeOPCUASessionError","setNodeInitalState","error","id","deregisterToConnector","removeAllListeners","deregisterForOPCUA","checkSessionNotValid","session","sessionId","statusParameter","showStatusActivities","isEqual","fill","text","createBiancoIIoT","initClientNode","reconnectTimeout","sessionTimeout","initCoreServerNode","initialized","element","filterValue","crawlerResults","handleErrorInsideNode","message","availableMemory","result","getItemFilterValueWithElement","key","match","checkResponseItemIsNotToFilter","checkItemForUnsetState","resetBiancoNode","resetAllTimer","filterListEntryByNodeId","list","isNodeTypeToFilterResponse","setNodeOPCUASessionRestart","module","exports"],"mappings":"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","file":"../../core/opcua-iiot-core.js","sourcesContent":["/**\n The BSD 3-Clause License\n\n Copyright 2016,2017,2018,2019 - Klaus Landsdorf (https://bianco-royal.com/)\n Copyright 2015,2016 - Mika Karaila, Valmet Automation Inc. (node-red-contrib-opcua)\n All rights reserved.\n node-red-contrib-iiot-opcua\n */\n'use strict'\nrequire('source-map-support').install()\n\n/**\n * Nested namespace settings.\n *\n * @type {{biancoroyal: {opcua: {iiot: {core: {}}}}}}\n *\n * @Namesapce de.biancoroyal.opcua.iiot.core\n */\nvar de = de || { biancoroyal: { opcua: { iiot: { core: {} } } } } // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.nodeOPCUA = de.biancoroyal.opcua.iiot.core.nodeOPCUA || require('node-opcua') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.nodeOPCUAId = de.biancoroyal.opcua.iiot.core.nodeOPCUAId || require('node-opcua-nodeid') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.internalDebugLog = de.biancoroyal.opcua.iiot.core.internalDebugLog || require('debug')('opcuaIIoT:core') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.detailDebugLog = de.biancoroyal.opcua.iiot.core.detailDebugLog || require('debug')('opcuaIIoT:core:details') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.specialDebugLog = de.biancoroyal.opcua.iiot.core.specialDebugLog || require('debug')('opcuaIIoT:core:special') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.OBJECTS_ROOT = de.biancoroyal.opcua.iiot.core.OBJECTS_ROOT || 'ns=0;i=84' // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.TEN_SECONDS_TIMEOUT = de.biancoroyal.opcua.iiot.core.TEN_SECONDS_TIMEOUT || 10 // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.RUNNING_STATE = de.biancoroyal.opcua.iiot.core.RUNNING_STATE || 'SESSIONACTIVE' // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.os = de.biancoroyal.opcua.iiot.core.os || require('os') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.assert = de.biancoroyal.opcua.iiot.core.assert || require('better-assert') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.underscore = de.biancoroyal.opcua.iiot.core.underscore || require('underscore') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.isWindows = de.biancoroyal.opcua.iiot.core.isWindows || /^win/.test(de.biancoroyal.opcua.iiot.core.os.platform()) // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.FAKTOR_SEC_TO_MSEC = de.biancoroyal.opcua.iiot.core.FAKTOR_SEC_TO_MSEC || 1000 // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.DEFAULT_TIMEOUT = de.biancoroyal.opcua.iiot.core.DEFAULT_TIMEOUT || 1000 // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.internalDebugLog(de.biancoroyal.opcua.iiot.core.os.endianness())\nde.biancoroyal.opcua.iiot.core.internalDebugLog(de.biancoroyal.opcua.iiot.core.os.hostname())\nde.biancoroyal.opcua.iiot.core.internalDebugLog(de.biancoroyal.opcua.iiot.core.os.platform())\nde.biancoroyal.opcua.iiot.core.internalDebugLog(de.biancoroyal.opcua.iiot.core.os.type())\nde.biancoroyal.opcua.iiot.core.internalDebugLog(de.biancoroyal.opcua.iiot.core.os.arch())\n\nde.biancoroyal.opcua.iiot.core.getPathFromRequireResolve = function (requireResolve) {\n  let pathToNodeOPCUA = ''\n\n  if (this.isWindows) {\n    pathToNodeOPCUA = requireResolve.replace('\\\\index.js', '')\n  } else {\n    pathToNodeOPCUA = requireResolve.replace('/index.js', '')\n  }\n\n  this.internalDebugLog('path to node-opcua: ' + pathToNodeOPCUA)\n\n  return pathToNodeOPCUA\n}\n\nde.biancoroyal.opcua.iiot.core.getNodeOPCUAPath = function () {\n  return this.getPathFromRequireResolve(require.resolve('node-opcua'))\n}\n\nde.biancoroyal.opcua.iiot.core.getNodeOPCUAClientPath = function () {\n  return this.getPathFromRequireResolve(require.resolve('node-opcua-client'))\n}\n\nde.biancoroyal.opcua.iiot.core.getNodeOPCUAServerPath = function () {\n  return this.getPathFromRequireResolve(require.resolve('node-opcua-server'))\n}\n\nde.biancoroyal.opcua.iiot.core.getTimeUnitName = function (unit) {\n  let unitAbbreviation = ''\n\n  switch (unit) {\n    case 'ms':\n      unitAbbreviation = 'msec.'\n      break\n    case 's':\n      unitAbbreviation = 'sec.'\n      break\n    case 'm':\n      unitAbbreviation = 'min.'\n      break\n    case 'h':\n      unitAbbreviation = 'h.'\n      break\n    default:\n      break\n  }\n\n  return unitAbbreviation\n}\n\nde.biancoroyal.opcua.iiot.core.calcMillisecondsByTimeAndUnit = function (time, unit) {\n  let convertedTime\n\n  switch (unit) {\n    case 'ms':\n      convertedTime = time\n      break\n    case 's':\n      convertedTime = time * 1000 // seconds\n      break\n    case 'm':\n      convertedTime = time * 60000 // minutes\n      break\n    case 'h':\n      convertedTime = time * 3600000 // hours\n      break\n    default:\n      convertedTime = 10000 // 10 sec.\n      break\n  }\n\n  return convertedTime\n}\n\nde.biancoroyal.opcua.iiot.core.buildBrowseMessage = function (topic) {\n  return {\n    'topic': topic,\n    'nodeId': '',\n    'browseName': '',\n    'nodeClassType': '',\n    'typeDefinition': '',\n    'payload': ''\n  }\n}\n\nde.biancoroyal.opcua.iiot.core.toInt32 = function (x) {\n  let uintSixteen = x\n\n  if (uintSixteen >= Math.pow(2, 15)) {\n    uintSixteen = x - Math.pow(2, 16)\n    return uintSixteen\n  } else {\n    return uintSixteen\n  }\n}\n\nde.biancoroyal.opcua.iiot.core.getNodeStatus = function (statusValue, statusLog) {\n  let fillValue = 'yellow'\n  let shapeValue = 'ring'\n\n  switch (statusValue) {\n    case 'initialize':\n    case 'connecting':\n      fillValue = 'yellow'\n      break\n    case 'connected':\n    case 'keepalive':\n    case 'subscribe':\n    case 'started':\n      if (!statusLog) {\n        statusValue = 'active'\n        shapeValue = 'dot'\n      }\n      fillValue = 'green'\n      break\n    case 'active':\n    case 'subscribed':\n    case 'listening':\n      fillValue = 'green'\n      shapeValue = 'dot'\n      break\n    case 'disconnected':\n    case 'terminated':\n      fillValue = 'red'\n      break\n    case 'waiting':\n      fillValue = 'blue'\n      shapeValue = 'dot'\n      statusValue = 'waiting ...'\n      break\n    case 'error':\n      fillValue = 'red'\n      shapeValue = 'dot'\n      break\n    default:\n      if (!statusValue) {\n        fillValue = 'blue'\n        statusValue = 'waiting ...'\n      }\n  }\n\n  return { fill: fillValue, shape: shapeValue, status: statusValue }\n}\n\nde.biancoroyal.opcua.iiot.core.buildNewVariant = function (datatype, value, arraytype, dimensions) {\n  let opcua = this.nodeOPCUA\n  let variantValue = null\n  arraytype = arraytype || opcua.VariantArrayType.Scalar\n\n  this.detailDebugLog('buildNewVariant datatype: ' + datatype + ' value:' + value)\n\n  switch (arraytype) {\n    case 'Matrix':\n    case opcua.VariantArrayType.Matrix:\n      variantValue = this.buildNewMatrixVariant(datatype, value, dimensions)\n      break\n    case 'Array':\n    case opcua.VariantArrayType.Array:\n      variantValue = this.buildNewArrayVariant(datatype, value)\n      break\n    default:\n      variantValue = this.buildNewScalarVariant(datatype, value)\n      break\n  }\n\n  this.detailDebugLog('buildNewVariant variantValue: ' + JSON.stringify(variantValue))\n\n  return variantValue\n}\n\nde.biancoroyal.opcua.iiot.core.flattenMatrixValue = function (value, dimensions, depth, flattened) {\n  flattened = flattened || []\n  depth = depth || 0\n\n  if (Array.isArray(value)) {\n    if (value.length === 0) {\n      throw new Error('Matrix cannot have zero length dimensions')\n    }\n\n    if (dimensions.length === depth) {\n      dimensions.push(value.length)\n    } else if (dimensions[depth] !== value.length) {\n      throw new Error('Matrix subtitems need to be of an equal size')\n    }\n\n    for (let i = 0; i < value.length; i++) {\n      this.flattenMatrixValue(value[i], dimensions, depth + 1, flattened)\n    }\n  } else {\n    flattened.push(value)\n  }\n\n  return flattened\n}\n\nde.biancoroyal.opcua.iiot.core.buildNewMatrixVariant = function (datatype, value, dimensions) {\n  let opcua = this.nodeOPCUA\n\n  if (!Array.isArray(value)) {\n    throw new Error('Non array value provided to an matrix type node')\n  }\n\n  let inferedDimensions = []\n  let flattenedValue = this.flattenMatrixValue(value, inferedDimensions)\n\n  dimensions = dimensions || inferedDimensions\n  if (!inferedDimensions.every((e, i) => e === dimensions[i])) {\n    // Allow Matrix to be given as flat array\n    if (inferedDimensions[0] !== dimensions.reduce((a, b) => a * b)) {\n      throw new Error('Given matrix dimensions do not match the number of values')\n    }\n  }\n\n  let variantValue = de.biancoroyal.opcua.iiot.core.buildNewArrayVariant(datatype, flattenedValue)\n\n  variantValue.arrayType = opcua.VariantArrayType.Matrix\n  variantValue.dimensions = dimensions\n\n  return variantValue\n}\n\nde.biancoroyal.opcua.iiot.core.buildNewArrayVariant = function (datatype, value) {\n  let opcua = this.nodeOPCUA\n  let variantValue = null\n\n  if (!Array.isArray(value)) {\n    throw new Error('Non array value provided to an array type node')\n  }\n\n  switch (datatype) {\n    case 'Float':\n    case opcua.DataType.Float:\n      variantValue = {\n        dataType: opcua.DataType.Float,\n        arrayType: opcua.VariantArrayType.Array,\n        value: []\n      }\n      for (let i = 0; i < value.length; i++) {\n        variantValue.value.push(parseFloat(value[i]))\n      }\n      break\n    case 'Double':\n    case opcua.DataType.Double:\n      variantValue = {\n        dataType: opcua.DataType.Double,\n        arrayType: opcua.VariantArrayType.Array,\n        value: []\n      }\n      for (let i = 0; i < value.length; i++) {\n        variantValue.value.push(parseFloat(value[i]))\n      }\n      break\n    case 'UInt16':\n    case opcua.DataType.UInt16:\n      let uint16 = new Uint16Array(value)\n      variantValue = {\n        dataType: opcua.DataType.UInt16,\n        arrayType: opcua.VariantArrayType.Array,\n        value: uint16\n      }\n      break\n    case 'UInt32':\n    case opcua.DataType.UInt32:\n      let uint32 = new Uint32Array(value)\n      variantValue = {\n        dataType: opcua.DataType.UInt32,\n        arrayType: opcua.VariantArrayType.Array,\n        value: uint32\n      }\n      break\n    case 'Int32':\n    case opcua.DataType.Int32:\n      variantValue = {\n        dataType: opcua.DataType.Int32,\n        arrayType: opcua.VariantArrayType.Array,\n        value: []\n      }\n      for (let i = 0; i < value.length; i++) {\n        variantValue.value.push(parseInt(value[i]))\n      }\n      break\n    case 'Int16':\n    case opcua.DataType.Int16:\n      variantValue = {\n        dataType: opcua.DataType.Int16,\n        arrayType: opcua.VariantArrayType.Array,\n        value: []\n      }\n      for (let i = 0; i < value.length; i++) {\n        variantValue.value.push(parseInt(value[i]))\n      }\n      break\n    case 'Int64':\n    case opcua.DataType.Int64:\n      variantValue = {\n        dataType: opcua.DataType.Int64,\n        arrayType: opcua.VariantArrayType.Array,\n        value: []\n      }\n      for (let i = 0; i < value.length; i++) {\n        variantValue.value.push(parseInt(value[i]))\n      }\n      break\n    case 'Boolean':\n    case opcua.DataType.Boolean:\n      variantValue = {\n        dataType: opcua.DataType.Boolean,\n        arrayType: opcua.VariantArrayType.Array,\n        value: []\n      }\n      for (let i = 0; i < value.length; i++) {\n        if (value[i] && value[i] !== 'false' && value[i] !== '0') {\n          variantValue.value.push(true)\n        } else {\n          variantValue.value.push(false)\n        }\n      }\n      break\n    case 'LocalizedText':\n    case opcua.DataType.LocalizedText:\n      variantValue = {\n        dataType: opcua.DataType.LocalizedText,\n        arrayType: opcua.VariantArrayType.Array,\n        value: []\n      }\n      for (let i = 0; i < value.length; i++) {\n        variantValue.value.push(JSON.parse(value[i])) /* [{text:'Hello', locale:'en'}, {text:'Hallo', locale:'de'} ... ] */\n      }\n      break\n    case 'DateTime':\n    case opcua.DataType.DateTime:\n      variantValue = {\n        dataType: opcua.DataType.DateTime,\n        arrayType: opcua.VariantArrayType.Array,\n        value: []\n      }\n      for (let i = 0; i < value.length; i++) {\n        variantValue.value.push(new Date(value[i]))\n      }\n      break\n    default:\n      if (datatype !== '') {\n        const datatypeList = this.getBasicDataTypes()\n        datatypeList.forEach((item) => {\n          if (item.name === datatype || item.dataType === datatype) {\n            variantValue = {\n              dataType: item.dataType,\n              arrayType: opcua.VariantArrayType.Array,\n              value: value\n            }\n          }\n        })\n      } else {\n        variantValue = {\n          dataType: opcua.DataType.String,\n          arrayType: opcua.VariantArrayType.Array,\n          value: value\n        }\n      }\n      break\n  }\n\n  return variantValue\n}\n\nde.biancoroyal.opcua.iiot.core.buildNewScalarVariant = function (datatype, value) {\n  let opcua = this.nodeOPCUA\n  let variantValue = null\n\n  switch (datatype) {\n    case 'Float':\n    case opcua.DataType.Float:\n      variantValue = {\n        dataType: opcua.DataType.Float,\n        value: parseFloat(value)\n      }\n      break\n    case 'Double':\n    case opcua.DataType.Double:\n      variantValue = {\n        dataType: opcua.DataType.Double,\n        value: parseFloat(value)\n      }\n      break\n    case 'UInt16':\n    case opcua.DataType.UInt16:\n      let uint16 = new Uint16Array([value])\n      variantValue = {\n        dataType: opcua.DataType.UInt16,\n        value: uint16[0]\n      }\n      break\n    case 'UInt32':\n    case opcua.DataType.UInt32:\n      let uint32 = new Uint32Array([value])\n      variantValue = {\n        dataType: opcua.DataType.UInt32,\n        value: uint32[0]\n      }\n      break\n    case 'Int32':\n    case opcua.DataType.Int32:\n      variantValue = {\n        dataType: opcua.DataType.Int32,\n        value: parseInt(value)\n      }\n      break\n    case 'Int16':\n    case opcua.DataType.Int16:\n      variantValue = {\n        dataType: opcua.DataType.Int16,\n        value: parseInt(value)\n      }\n      break\n    case 'Int64':\n    case opcua.DataType.Int64:\n      variantValue = {\n        dataType: opcua.DataType.Int64,\n        value: parseInt(value)\n      }\n      break\n    case 'Boolean':\n    case opcua.DataType.Boolean:\n      if (value && value !== 'false' && value !== '0') {\n        variantValue = {\n          dataType: opcua.DataType.Boolean,\n          value: true\n        }\n      } else {\n        variantValue = {\n          dataType: opcua.DataType.Boolean,\n          value: false\n        }\n      }\n      break\n    case 'LocalizedText':\n    case opcua.DataType.LocalizedText:\n      variantValue = {\n        dataType: opcua.DataType.LocalizedText,\n        value: JSON.parse(value) /* [{text:'Hello', locale:'en'}, {text:'Hallo', locale:'de'} ... ] */\n      }\n      break\n    case 'DateTime':\n    case opcua.DataType.DateTime:\n      variantValue = {\n        dataType: opcua.DataType.DateTime,\n        value: new Date(value)\n      }\n      break\n    default:\n      if (datatype !== '') {\n        const datatypeList = this.getBasicDataTypes()\n        datatypeList.forEach((item) => {\n          if (item.name === datatype || item.dataType === datatype) {\n            variantValue = {\n              dataType: item.dataType,\n              value: value\n            }\n          }\n        })\n      } else {\n        variantValue = {\n          dataType: opcua.DataType.String,\n          value: value\n        }\n      }\n      break\n  }\n\n  return variantValue\n}\n\nde.biancoroyal.opcua.iiot.core.getVariantValue = function (datatype, value) {\n  let opcua = this.nodeOPCUA\n\n  switch (datatype) {\n    case 'UInt16':\n    case opcua.DataType.UInt16:\n      let uint16 = new Uint16Array([value])\n      return uint16[0]\n    case 'UInt32':\n    case opcua.DataType.UInt32:\n      let uint32 = new Uint32Array([value])\n      return uint32[0]\n    case 'Int16':\n    case opcua.DataType.Int16:\n    case 'Int32':\n    case opcua.DataType.Int32:\n    case 'Integer':\n    case 'Int64':\n    case opcua.DataType.Int64:\n    case 'UInt64':\n    case opcua.DataType.UInt64:\n      return Number(value)\n    case 'Boolean':\n    case opcua.DataType.Boolean:\n      return (value && value !== 'false' && value !== '0')\n    case 'DateTime':\n    case opcua.DataType.DateTime:\n      return new Date(value)\n    case 'String':\n    case opcua.DataType.String:\n      return (typeof value !== 'string') ? value.toString() : value\n    default:\n      return value\n  }\n}\n\nde.biancoroyal.opcua.iiot.core.getBasicDataTypes = function () {\n  let opcua = this.nodeOPCUA\n\n  return [\n    { name: 'Null', dataType: opcua.DataType.Null },\n    { name: 'Boolean', dataType: opcua.DataType.Boolean },\n    { name: 'SByte', dataType: opcua.DataType.SByte },\n    { name: 'Byte', dataType: opcua.DataType.Byte },\n    { name: 'Int16', dataType: opcua.DataType.Int16 },\n    { name: 'UInt16', dataType: opcua.DataType.UInt16 },\n    { name: 'Int32', dataType: opcua.DataType.Int32 },\n    { name: 'UInt32', dataType: opcua.DataType.UInt32 },\n    { name: 'Int64', dataType: opcua.DataType.Int64 },\n    { name: 'UInt64', dataType: opcua.DataType.UInt64 },\n    { name: 'Float', dataType: opcua.DataType.Float },\n    { name: 'Double', dataType: opcua.DataType.Double },\n    { name: 'DateTime', dataType: opcua.DataType.DateTime },\n    { name: 'String', dataType: opcua.DataType.String },\n    { name: 'Guid', dataType: opcua.DataType.Guid },\n    { name: 'ByteString', dataType: opcua.DataType.ByteString },\n    { name: 'XmlElement', dataType: opcua.DataType.XmlElement },\n    { name: 'NodeId', dataType: opcua.DataType.NodeId },\n    { name: 'ExpandedNodeId', dataType: opcua.DataType.ExpandedNodeId },\n    { name: 'StatusCode', dataType: opcua.DataType.StatusCode },\n    { name: 'LocalizedText', dataType: opcua.DataType.LocalizedText },\n    { name: 'ExtensionObject', dataType: opcua.DataType.ExtensionObject },\n    { name: 'DataValue', dataType: opcua.DataType.DataValue },\n    { name: 'Variant', dataType: opcua.DataType.Variant },\n    { name: 'DiagnosticInfo', dataType: opcua.DataType.DiagnosticInfo }\n  ]\n}\n\nde.biancoroyal.opcua.iiot.core.convertDataValue = function (value) {\n  return de.biancoroyal.opcua.iiot.core.convertDataValueByDataType(value, value.dataType)\n}\n\nde.biancoroyal.opcua.iiot.core.convertDataValueByDataType = function (value, dataType) {\n  let opcua = this.nodeOPCUA\n  let convertedValue = null\n\n  if (!value.hasOwnProperty('value')) {\n    this.specialDebugLog('value has no value and that is not allowed ' + JSON.stringify(value))\n    return value\n  }\n\n  let valueType = typeof value.value\n\n  this.detailDebugLog('convertDataValue: ' + JSON.stringify(value) +\n    ' value origin type ' + valueType + ' convert to' + ' ' + dataType)\n\n  try {\n    switch (dataType) {\n      case 'NodeId':\n      case opcua.DataType.NodeId:\n        convertedValue = value.value.toString()\n        break\n      case 'NodeIdType':\n      case opcua.DataType.NodeIdType:\n        if (value.value instanceof Buffer) {\n          convertedValue = value.value.toString()\n        } else {\n          convertedValue = value.value\n        }\n        break\n      case 'ByteString':\n      case opcua.DataType.ByteString:\n        convertedValue = value.value\n        break\n      case 'Byte':\n      case opcua.DataType.Byte:\n        if (valueType === 'boolean') {\n          convertedValue = value.value ? 1 : 0\n        } else {\n          convertedValue = parseInt(value.value)\n        }\n        break\n      case opcua.DataType.QualifiedName:\n        convertedValue = value.value.toString()\n        break\n      case 'LocalizedText':\n      case opcua.DataType.LocalizedText:\n        convertedValue = value.value\n        break\n      case 'Float':\n      case opcua.DataType.Float:\n        if (isNaN(value.value)) {\n          convertedValue = value.value\n        } else {\n          convertedValue = parseFloat(value.value)\n        }\n        break\n      case 'Double':\n      case opcua.DataType.Double:\n        if (isNaN(value.value)) {\n          convertedValue = value.value\n        } else {\n          convertedValue = parseFloat(value.value)\n        }\n        break\n      case 'UInt16':\n      case opcua.DataType.UInt16:\n        let uint16 = new Uint16Array([value.value])\n        convertedValue = uint16[0]\n        break\n      case 'UInt32':\n      case opcua.DataType.UInt32:\n        let uint32 = new Uint32Array([value.value])\n        convertedValue = uint32[0]\n        break\n      case 'Int16':\n      case opcua.DataType.Int16:\n      case 'Int32':\n      case opcua.DataType.Int32:\n      case 'Int64':\n      case opcua.DataType.Int64:\n        if (valueType === 'boolean') {\n          convertedValue = value.value ? 1 : 0\n        } else {\n          if (isNaN(value.value)) {\n            convertedValue = value.value\n          } else {\n            convertedValue = parseInt(value.value)\n          }\n        }\n        break\n      case 'Boolean':\n      case opcua.DataType.Boolean:\n        convertedValue = value.value\n        break\n      case 'String':\n      case opcua.DataType.String:\n        if (valueType !== 'string') {\n          convertedValue = value.value.toString()\n        } else {\n          convertedValue = value.value\n        }\n        break\n      case 'Null':\n      case opcua.DataType.Null:\n        convertedValue = null\n        break\n      default:\n        this.internalDebugLog('convertDataValue unused DataType: ' + dataType)\n        if (value.hasOwnProperty('value')) {\n          convertedValue = value.value\n        } else {\n          convertedValue = null\n        }\n        break\n    }\n  } catch (err) {\n    this.detailDebugLog('convertDataValue ' + err)\n  }\n\n  this.detailDebugLog('convertDataValue is: ' + convertedValue)\n\n  return convertedValue\n}\n\nde.biancoroyal.opcua.iiot.core.regex_ns_i = /ns=([0-9]+);i=([0-9]+)/\nde.biancoroyal.opcua.iiot.core.regex_ns_s = /ns=([0-9]+);s=(.*)/\nde.biancoroyal.opcua.iiot.core.regex_ns_b = /ns=([0-9]+);b=(.*)/\nde.biancoroyal.opcua.iiot.core.regex_ns_g = /ns=([0-9]+);g=(.*)/\n\nde.biancoroyal.opcua.iiot.core.parseNamspaceFromMsgTopic = function (msg) {\n  let nodeNamespace = null\n\n  if (msg && msg.topic) {\n    // TODO: real parsing instead of string operations\n    // TODO: which type are relevant here? (String, Integer ...)\n    nodeNamespace = msg.topic.substring(3, msg.topic.indexOf(';'))\n  }\n\n  return nodeNamespace\n}\n\nde.biancoroyal.opcua.iiot.core.parseNamspaceFromItemNodeId = function (item) {\n  let nodeNamespace = null\n  let nodeItem = item.nodeId || item\n\n  if (nodeItem) {\n    // TODO: real parsing instead of string operations\n    // TODO: which type are relevant here? (String, Integer ...)\n    nodeNamespace = nodeItem.substring(3, nodeItem.indexOf(';'))\n  }\n\n  return nodeNamespace\n}\n\nde.biancoroyal.opcua.iiot.core.parseForNodeIdentifier = function (nodeItem) {\n  let nodeIdentifier = null\n\n  if (nodeItem) {\n    // TODO: real parsing instead of string operations\n    if (nodeItem.includes(';i=')) {\n      nodeIdentifier = {\n        identifier: parseInt(nodeItem.substring(nodeItem.indexOf(';i=') + 3)),\n        type: de.biancoroyal.opcua.iiot.core.nodeOPCUAId.NodeIdType.NUMERIC\n      }\n    } else if (nodeItem.includes(';g=')) {\n      nodeIdentifier = {\n        identifier: nodeItem.substring(nodeItem.indexOf(';g=') + 3),\n        type: de.biancoroyal.opcua.iiot.core.nodeOPCUAId.NodeIdType.GUID\n      }\n    } else {\n      if (nodeItem.includes(';b=')) {\n        nodeIdentifier = {\n          identifier: nodeItem.substring(nodeItem.indexOf(';b=') + 3),\n          type: de.biancoroyal.opcua.iiot.core.nodeOPCUAId.NodeIdType.BYTESTRING\n        }\n      } else {\n        nodeIdentifier = {\n          identifier: nodeItem.substring(nodeItem.indexOf(';s=') + 3),\n          type: de.biancoroyal.opcua.iiot.core.nodeOPCUAId.NodeIdType.STRING\n        }\n      }\n    }\n  }\n  return nodeIdentifier\n}\n\nde.biancoroyal.opcua.iiot.core.parseIdentifierFromMsgTopic = function (msg) {\n  return this.parseForNodeIdentifier(msg.topic)\n}\n\nde.biancoroyal.opcua.iiot.core.parseIdentifierFromItemNodeId = function (item) {\n  return this.parseForNodeIdentifier(item.nodeId || item)\n}\n\nde.biancoroyal.opcua.iiot.core.newOPCUANodeIdFromItemNodeId = function (item) {\n  let namespace = this.parseNamspaceFromItemNodeId(item)\n  let nodeIdentifier = this.parseIdentifierFromItemNodeId(item)\n\n  this.internalDebugLog('newOPCUANodeIdFromItemNodeId: ' + JSON.stringify(item) + ' -> ' + JSON.stringify(nodeIdentifier) + ' namespace:' + namespace)\n  return new de.biancoroyal.opcua.iiot.core.nodeOPCUAId.NodeId(nodeIdentifier.type, nodeIdentifier.identifier, namespace)\n}\n\nde.biancoroyal.opcua.iiot.core.newOPCUANodeIdFromMsgTopic = function (msg) {\n  let namespace = this.parseNamspaceFromMsgTopic(msg)\n  let nodeIdentifier = this.parseIdentifierFromMsgTopic(msg)\n\n  this.internalDebugLog('newOPCUANodeIdFromMsgTopic: ' + JSON.stringify(nodeIdentifier))\n  return new de.biancoroyal.opcua.iiot.core.nodeOPCUAId.NodeId(nodeIdentifier.type, nodeIdentifier.identifier, namespace)\n}\n\nde.biancoroyal.opcua.iiot.core.pushItemToWriteList = function (msg, nodesToWrite, item, value) {\n  let opcua = this.nodeOPCUA\n\n  nodesToWrite.push({\n    nodeId: this.newOPCUANodeIdFromItemNodeId(item),\n    attributeId: opcua.AttributeIds.Value,\n    indexRange: null,\n    value\n  })\n}\n\nde.biancoroyal.opcua.iiot.core.buildNodesToWrite = function (msg) {\n  let core = this\n  let nodesToWrite = []\n\n  this.detailDebugLog('buildNodesToWrite input: ' + JSON.stringify(msg))\n  let item = null\n\n  // compatible mode to nodesToWrite of node-opcua\n  if (!msg.addressSpaceItems || !msg.addressSpaceItems.length) {\n    let itemList = msg.payload.nodesToWrite || msg.nodesToWrite\n    if (itemList && itemList.length) {\n      msg.addressSpaceItems = itemList\n    }\n  }\n\n  if (msg.addressSpaceItems) {\n    let index = 0\n    if (msg.valuesToWrite) {\n      for (item of msg.addressSpaceItems) {\n        core.pushItemToWriteList(msg, nodesToWrite, item, { value: this.buildNewVariant(item.datatypeName, msg.valuesToWrite[index++], item.arraytypeName, item.dimensions) })\n      }\n    } else {\n      for (item of msg.addressSpaceItems) {\n        if (item.value) {\n          core.pushItemToWriteList(msg, nodesToWrite, item, { value: this.buildNewVariant(item.datatypeName, item.value, item.arraytypeName, item.dimensions) })\n        } else {\n          core.pushItemToWriteList(msg, nodesToWrite, item, { value: this.buildNewVariant(item.datatypeName, (msg.payload.length && msg.payload.length === msg.addressSpaceItems.length) ? msg.payload[index++] : msg.payload, item.arraytypeName, item.dimensions) })\n        }\n      }\n    }\n  }\n\n  this.internalDebugLog('buildNodesToWrite output: ' + JSON.stringify(nodesToWrite))\n\n  return nodesToWrite\n}\n\nde.biancoroyal.opcua.iiot.core.buildNodesToRead = function (msg) {\n  let nodesToRead = []\n  let item = null\n\n  this.detailDebugLog('buildNodesToRead input: ' + JSON.stringify(msg))\n\n  let nodePayloadList = msg.payload.nodesToRead || msg.payload.nodesToWrite\n  if (nodePayloadList && nodePayloadList.length) {\n    // read to read\n    for (item of nodePayloadList) {\n      item = item.nodeId || item\n      nodesToRead.push(item.toString())\n    }\n  } else {\n    let nodeList = msg.nodesToRead || msg.nodesToWrite\n    if (nodeList && nodeList.length) {\n      // legacy\n      for (item of nodeList) {\n        item = item.nodeId || item\n        nodesToRead.push(item.toString())\n      }\n    } else {\n      // new structure\n      if (msg.payload.addressSpaceItems && msg.payload.addressSpaceItems.length) {\n        for (item of msg.payload.addressSpaceItems) {\n          nodesToRead.push(item.nodeId)\n        }\n      } else {\n        if (msg.addressSpaceItems && msg.addressSpaceItems.length) {\n          for (item of msg.addressSpaceItems) {\n            nodesToRead.push(item.nodeId)\n          }\n        }\n      }\n    }\n  }\n\n  this.internalDebugLog('buildNodesToRead output: ' + JSON.stringify(nodesToRead))\n\n  return nodesToRead\n}\n\nde.biancoroyal.opcua.iiot.core.buildNodesToListen = function (msg) {\n  return msg.addressItemsToRead || msg.addressSpaceItems\n}\n\nde.biancoroyal.opcua.iiot.core.buildNodesFromBrowser = function (msg) {\n  return msg.payload.browserResults || msg.addressSpaceItems\n}\n\nde.biancoroyal.opcua.iiot.core.buildNodesFromCrawler = function (msg) {\n  return msg.payload.crawlerResults || msg.addressSpaceItems\n}\n\nde.biancoroyal.opcua.iiot.core.buildNodeListFromClient = function (msg) {\n  switch (msg.nodetype) {\n    case 'read':\n    case 'write':\n      return this.buildNodesToRead(msg)\n    case 'listen':\n      return this.buildNodesToListen(msg)\n    case 'browse':\n      return this.buildNodesFromBrowser(msg)\n    case 'crawl':\n      return this.buildNodesFromCrawler(msg)\n    default:\n      this.internalDebugLog('unknown node type injected to filter for ' + msg.nodetype)\n      return []\n  }\n}\n\nde.biancoroyal.opcua.iiot.core.availableMemory = function () {\n  return this.os.freemem() / this.os.totalmem() * 100.0\n}\n\nde.biancoroyal.opcua.iiot.core.isSessionBad = function (err) {\n  return (err.toString().includes('Session') ||\n    err.toString().includes('Channel') ||\n    err.toString().includes('Transaction') ||\n    err.toString().includes('timeout') ||\n    err.toString().includes('Connection'))\n}\n\nde.biancoroyal.opcua.iiot.core.setNodeInitalState = function (nodeState, node) {\n  switch (nodeState) {\n    case 'INITOPCUA':\n    case 'SESSIONREQUESTED':\n      this.setNodeStatusTo(node, 'connecting')\n      break\n    case 'OPEN':\n    case 'SESSIONCLOSED':\n      node.bianco.iiot.opcuaClient = node.connector.bianco.iiot.opcuaClient\n      this.setNodeStatusTo(node, 'connected')\n      break\n    case 'SESSIONACTIVE':\n      node.bianco.iiot.opcuaSession = node.connector.bianco.iiot.opcuaSession\n      this.setNodeStatusTo(node, 'active')\n      break\n    case 'LOCKED':\n      this.setNodeStatusTo(node, 'locked')\n      break\n    case 'UNLOCKED':\n      this.setNodeStatusTo(node, 'unlocked')\n      break\n    case 'STOPPED':\n      this.setNodeStatusTo(node, 'stopped')\n      break\n    case 'END':\n      this.setNodeStatusTo(node, 'end')\n      break\n    default:\n      this.setNodeStatusTo(node, 'waiting')\n  }\n}\n\nde.biancoroyal.opcua.iiot.core.isNodeId = function (nodeId) {\n  if (!nodeId || !nodeId.identifierType) {\n    return false\n  }\n\n  switch (nodeId.identifierType) {\n    case this.nodeOPCUA.NodeIdType.NUMERIC:\n    case this.nodeOPCUA.NodeIdType.STRING:\n    case this.nodeOPCUA.NodeIdType.GUID:\n      return true\n    default:\n      return false\n  }\n}\n\nde.biancoroyal.opcua.iiot.core.checkConnectorState = function (node, msg, callerType) {\n  this.internalDebugLog('Check Connector State ' + node.connector.bianco.iiot.stateMachine.getMachineState() + ' By ' + callerType)\n\n  if (node.connector && node.connector.bianco.iiot.stateMachine && node.connector.bianco.iiot.stateMachine.getMachineState() !== this.RUNNING_STATE) {\n    this.internalDebugLog('Wrong Client State ' + node.connector.bianco.iiot.stateMachine.getMachineState() + ' By ' + callerType)\n    if (node.showErrors) {\n      node.error(new Error('Client Not ' + this.RUNNING_STATE + ' On ' + callerType), msg)\n    }\n    this.setNodeStatusTo(node, 'not running')\n    node.emit('opcua_client_not_ready')\n    return false\n  } else {\n    return true\n  }\n}\n\nde.biancoroyal.opcua.iiot.core.setNodeOPCUAConnected = function (node, opcuaClient) {\n  if (this.isInitializedBiancoIIoTNode(node)) {\n    node.bianco.iiot.opcuaClient = opcuaClient\n  }\n  this.setNodeStatusTo(node, 'connecting')\n}\n\nde.biancoroyal.opcua.iiot.core.setNodeOPCUAClosed = function (node) {\n  if (this.isInitializedBiancoIIoTNode(node)) {\n    node.bianco.iiot.opcuaClient = null\n  }\n  this.setNodeStatusTo(node, 'disconnected')\n}\n\nde.biancoroyal.opcua.iiot.core.setNodeOPCUALost = function (node) {\n  this.setNodeStatusTo(node, 'lost')\n}\n\nde.biancoroyal.opcua.iiot.core.setNodeOPCUASessionStarted = function (node, opcuaSession) {\n  if (this.isInitializedBiancoIIoTNode(node)) {\n    node.bianco.iiot.opcuaSession = opcuaSession\n  }\n  this.setNodeStatusTo(node, 'active')\n}\n\nde.biancoroyal.opcua.iiot.core.setNodeOPCUASessionClosed = function (node) {\n  if (this.isInitializedBiancoIIoTNode(node)) {\n    node.bianco.iiot.opcuaSession = null\n  }\n  this.setNodeStatusTo(node, 'connecting')\n}\n\nde.biancoroyal.opcua.iiot.core.setNodeOPCUASessionRestart = function (node) {\n  this.setNodeStatusTo(node, 'restart')\n}\n\nde.biancoroyal.opcua.iiot.core.setNodeOPCUASessionError = function (node) {\n  if (this.isInitializedBiancoIIoTNode(node)) {\n    node.bianco.iiot.opcuaSession = null\n  }\n  this.setNodeStatusTo(node, 'connecting')\n}\n\nde.biancoroyal.opcua.iiot.core.setNodeOPCUARestart = function (node, opcuaClient) {\n  this.internalDebugLog('Connector Restart')\n  if (opcuaClient && this.isInitializedBiancoIIoTNode(node)) {\n    node.bianco.iiot.opcuaClient = opcuaClient\n  }\n  this.setNodeStatusTo(node, 'connecting')\n}\n\nde.biancoroyal.opcua.iiot.core.registerToConnector = function (node) {\n  let core = this\n\n  if (!this.isInitializedBiancoIIoTNode(node)) {\n    core.internalDebugLog('Node Not Valid On Register To Connector')\n    return\n  }\n\n  if (!this.isInitializedBiancoIIoTNode(node.connector)) {\n    node.error(new Error('Connector Config Node Not Valid On Registering Client Node ' + node.id), { payload: 'No Connector Configured' })\n    return\n  }\n\n  node.connector.bianco.iiot.registerForOPCUA(node)\n\n  node.connector.on('connector_init', () => {\n    if (node.bianco.iiot.opcuaClient) {\n      node.bianco.iiot.opcuaClient = null\n    }\n\n    if (node.bianco.iiot.opcuaSession) {\n      node.bianco.iiot.opcuaSession = null\n    }\n  })\n\n  node.connector.on('connection_started', (opcuaClient) => {\n    core.setNodeOPCUAConnected(node, opcuaClient)\n  })\n\n  node.connector.on('server_connection_close', () => {\n    core.setNodeOPCUAClosed(node)\n  })\n\n  node.connector.on('server_connection_abort', () => {\n    core.setNodeOPCUAClosed(node)\n  })\n\n  node.connector.on('connection_closed', () => {\n    core.setNodeOPCUAClosed(node)\n  })\n\n  node.connector.on('server_connection_lost', () => {\n    core.setNodeOPCUALost(node)\n  })\n\n  node.connector.on('reset_opcua_connection', () => {\n    core.setNodeOPCUASessionClosed(node)\n  })\n\n  node.connector.on('session_started', (opcuaSession) => {\n    core.setNodeOPCUASessionStarted(node, opcuaSession)\n  })\n\n  node.connector.on('session_closed', () => {\n    core.setNodeOPCUASessionClosed(node)\n  })\n\n  node.connector.on('session_restart', () => {\n    core.setNodeOPCUAClosed(node)\n  })\n\n  node.connector.on('session_error', () => {\n    core.setNodeOPCUASessionError(node)\n  })\n\n  node.connector.on('after_reconnection', () => {\n    core.setNodeOPCUARestart(node)\n  })\n\n  core.setNodeInitalState(node.connector.bianco.iiot.stateMachine.getMachineState(), node)\n}\n\nde.biancoroyal.opcua.iiot.core.deregisterToConnector = function (node, done) {\n  let core = this\n\n  if (!node) {\n    core.internalDebugLog('Node Not Valid On Register To Connector')\n    done()\n  } else {\n    if (!node.connector) {\n      node.error(new Error('Connector Not Valid On Register To Connector'), { payload: 'No Connector Configured' })\n      done()\n    } else {\n      node.connector.removeAllListeners()\n      if (core.isInitializedBiancoIIoTNode(node.connector)) {\n        node.connector.bianco.iiot.deregisterForOPCUA(node, done)\n      } else {\n        done()\n      }\n    }\n  }\n}\n\nde.biancoroyal.opcua.iiot.core.checkSessionNotValid = function (session, callerType) {\n  if (!session) {\n    this.internalDebugLog('Session Not Valid On Check For ' + callerType)\n    return true\n  }\n\n  if (session.sessionId === 'terminated') {\n    this.internalDebugLog('Session Is Valid But Terminated On Check For ' + callerType)\n    return true\n  }\n\n  return false\n}\n\nde.biancoroyal.opcua.iiot.core.setNodeStatusTo = function (node, statusValue) {\n  let statusParameter = this.getNodeStatus(statusValue, node.showStatusActivities)\n  if (!this.underscore.isEqual(node.oldStatusParameter, statusParameter)) {\n    this.detailDebugLog('Node ' + node.id + ' Status To ' + statusValue)\n    node.oldStatusParameter = statusParameter\n    node.status({ fill: statusParameter.fill, shape: statusParameter.shape, text: statusParameter.status })\n  }\n}\n\nde.biancoroyal.opcua.iiot.core.createBiancoIIoT = function () {\n  return { iiot: {} }\n}\n\nde.biancoroyal.opcua.iiot.core.initClientNode = function (node) {\n  node.bianco = this.createBiancoIIoT()\n  node.bianco.iiot.reconnectTimeout = this.DEFAULT_TIMEOUT\n  node.bianco.iiot.sessionTimeout = null\n  node.bianco.iiot.opcuaSession = null\n  node.bianco.iiot.opcuaClient = null\n  return node\n}\n\nde.biancoroyal.opcua.iiot.core.initCoreServerNode = function (node) {\n  node.bianco = this.createBiancoIIoT()\n  node.bianco.iiot.initialized = false\n  node.bianco.iiot.opcuaServer = null\n  return node\n}\n\nde.biancoroyal.opcua.iiot.core.getItemFilterValueWithElement = function (item, element) {\n  let filterValue = null\n\n  switch (element.name) {\n    case 'browseName':\n    case 'statusCode':\n      filterValue = item[element.name].name\n      break\n    case 'displayName':\n      filterValue = item[element.name].text\n      break\n    case 'value':\n    case 'dataType':\n      if (item.value && item.value.hasOwnProperty('value')) {\n        filterValue = item.value[element.name]\n      } else {\n        filterValue = item[element.name]\n      }\n      break\n    default:\n      filterValue = item[element.name]\n  }\n\n  return filterValue\n}\n\nde.biancoroyal.opcua.iiot.core.handleErrorInsideNode = function (node, err) {\n  this.internalDebugLog(typeof node + ' ' + err.message)\n  if (node.showErrors) {\n    node.error(err, { payload: err.message })\n  }\n}\n\nde.biancoroyal.opcua.iiot.core.checkCrawlerItemIsNotToFilter = function (node, item, element, result) {\n  try {\n    let filterValue = this.getItemFilterValueWithElement(item, element)\n\n    if (filterValue && filterValue.key && filterValue.key.match) {\n      if (filterValue.key.match(element.value)) {\n        result &= false\n      }\n    } else {\n      if (filterValue && filterValue.match) {\n        if (filterValue.match(element.value)) {\n          result &= false\n        }\n      } else {\n        if (filterValue && filterValue.toString) {\n          filterValue = filterValue.toString()\n          if (filterValue && filterValue.match) {\n            if (filterValue.match(element.value)) {\n              result &= false\n            }\n          }\n        }\n      }\n    }\n  } catch (err) {\n    this.handleErrorInsideNode(node, err)\n  }\n\n  return result\n}\n\nde.biancoroyal.opcua.iiot.core.checkResponseItemIsNotToFilter = function (node, item, element, result) {\n  try {\n    let filterValue = this.getItemFilterValueWithElement(item, element)\n\n    if (filterValue) {\n      if (filterValue.key && filterValue.key.match) {\n        result &= filterValue.key.match(element.value) !== null\n      } else {\n        if (filterValue.match) {\n          result &= filterValue.match(element.value) !== null\n        } else {\n          if (filterValue.toString) {\n            filterValue = filterValue.toString()\n            if (filterValue.match) {\n              result &= filterValue.match(element.value) !== null\n            }\n          }\n        }\n      }\n    } else {\n      result &= false // undefined items\n    }\n  } catch (err) {\n    this.handleErrorInsideNode(node, err)\n  }\n\n  return result\n}\n\nde.biancoroyal.opcua.iiot.core.checkItemForUnsetState = function (node, item) {\n  let result = true\n\n  if (node.activateUnsetFilter) {\n    result &= item !== null\n\n    if (item && item.hasOwnProperty('value')) {\n      if (item.value && item.value.hasOwnProperty('value')) {\n        result &= item.value.value !== null\n      } else {\n        result &= item.value !== null\n      }\n    }\n  }\n\n  return result\n}\n\nde.biancoroyal.opcua.iiot.core.resetBiancoNode = function (node) {\n  if (this.isInitializedBiancoIIoTNode(node) && node.bianco.iiot.resetAllTimer) {\n    node.bianco.iiot.resetAllTimer()\n  }\n  if (this.isInitializedBiancoIIoTNode(node)) {\n    node.bianco.iiot = null\n  }\n  node.bianco = null\n}\n\nde.biancoroyal.opcua.iiot.core.filterListEntryByNodeId = function (nodeId, list) {\n  let result = []\n\n  if (list && list.length) {\n    list.forEach((item) => {\n      if (item === nodeId) {\n        result.push(item)\n      }\n    })\n  }\n\n  return result\n}\n\nde.biancoroyal.opcua.iiot.core.filterListByNodeId = function (nodeId, list) {\n  let result = []\n\n  if (list && list.length) {\n    list.forEach((item) => {\n      if (item.nodeId === nodeId) {\n        result.push(item)\n      }\n    })\n  }\n\n  return result\n}\n\nde.biancoroyal.opcua.iiot.core.isNodeTypeToFilterResponse = function (msg) {\n  return msg.nodetype === 'read' || msg.nodetype === 'browse' || msg.nodetype === 'crawl' || msg.nodetype === 'method'\n}\n\nde.biancoroyal.opcua.iiot.core.isInitializedBiancoIIoTNode = function (node) {\n  return node && node.bianco && node.bianco.iiot\n}\n\nmodule.exports = de.biancoroyal.opcua.iiot.core\n"]}