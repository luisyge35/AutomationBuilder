"use strict";module.exports=function(u){require("source-map-support").install();var n=require("./modbus-basics"),o=require("./core/modbus-queue-core"),h=require("debug")("contribModbus:queue");u.nodes.registerType("modbus-queue-info",function(e){u.nodes.createNode(this,e),this.name=e.name,this.topic=e.topic,this.unitid=parseInt(e.unitid),this.lowLowLevel=parseInt(e.lowLowLevel),this.lowLevel=parseInt(e.lowLevel),this.highLevel=parseInt(e.highLevel),this.highHighLevel=parseInt(e.highHighLevel),this.errorOnHighLevel=e.errorOnHighLevel,this.queueReadIntervalTime=e.queueReadIntervalTime||1e3,this.showStatusActivities=e.showStatusActivities,this.updateOnAllQueueChanges=e.updateOnAllQueueChanges,this.internalDebugLog=h;var i=this;i.queueReadInterval=null,i.updateStatusRrunning=!1,n.setNodeStatusTo("waiting",i);var a=u.nodes.getNode(e.server);a&&(a.registerForModbus(i),n.initModbusClientEvents(i,a),i.resetStates=function(){i.lowLowLevelReached=!0,i.lowLevelReached=!1,i.highLevelReached=!1,i.highHighLevelReached=!1},i.resetStates(),i.checkLowLevelReached=function(e,t,i){if(!e.lowLevelReached&&t>e.lowLowLevel&&t<e.lowLevel){e.lowLevelReached=!0;var u={payload:Date.now(),topic:e.topic,state:"low level reached",unitid:i,modbusClientName:a.name,items:t};e.send(u)}},i.checkHighLevelReached=function(e,t,i){if(!e.highLevelReached&&t>e.lowLevel&&t>e.highLevel){e.highLevelReached=!0;var u={payload:Date.now(),topic:e.topic,state:"high level reached",unitid:i,modbusClientName:a.name,highLevel:e.highLevel,items:t};e.errorOnHighLevel?e.error(new Error("Queue High Level Reached"),u):e.warn(u),e.send(u)}},i.checkHighHighLevelReached=function(e,t,i){if(!e.highHighLevelReached&&t>e.highLevel&&t>e.highHighLevel){e.highHighLevelReached=!0;var u={payload:Date.now(),topic:e.topic,state:"high high level reached",unitid:i,modbusClientName:a.name,highLevel:e.highLevel,highHighLevel:e.highHighLevel,items:t};e.error(new Error("Queue High High Level Reached"),u),e.send(u)}},i.getStatusSituationFillColor=function(){var e="blue";return i.lowLevelReached&&(e="green"),i.highLevelReached&&(e=i.errorOnHighLevel?"red":"yellow"),i.highHighLevelReached&&(e="red"),e},i.readFromQueue=function(){if(!i.updateStatusRrunning){i.updateStatusRrunning=!0;var e=i.unitid||1;if(a.bufferCommands){(e<1||255<e)&&(e=1);var t=a.bufferCommandList.get(e).length;(!t||!i.lowLowLevelReached&&t<i.lowLowLevel)&&i.resetStates(),i.checkLowLevelReached(i,t,e),i.checkHighLevelReached(i,t,e),i.checkHighHighLevelReached(i,t,e),i.showStatusActivities&&i.status({fill:i.getStatusSituationFillColor(),shape:"ring",text:"active unit "+e+" queue items: "+t})}else i.showStatusActivities&&n.setNodeStatusTo("active unit "+e+" without queue",i);i.updateStatusRrunning=!1}},a.on("mbinit",i.readFromQueue),a.on("mbconnected",i.readFromQueue),a.on("mberror",i.readFromQueue),i.updateOnAllQueueChanges&&a.on("mbactive",i.readFromQueue),a.on("mbclosed",i.readFromQueue),i.queueReadInterval=setInterval(i.readFromQueue,i.queueReadIntervalTime),i.on("input",function(e){if(e.queueEnabled=a.bufferCommands,Number.isInteger(i.unitid)?(e.queue=a.bufferCommandList.get(i.unitid),e.unitid=i.unitid):e.queues=a.bufferCommandList,e.queueOptions={date:Date.now(),state:"queue request",modbusClientName:a.name,lowlowLevel:i.lowlowLevel,lowLevel:i.lowLevel,highLevel:i.highLevel,highHighLevel:i.highHighLevel},e&&e.resetQueue&&a.bufferCommands){if(o.initQueue(a),u.settings.verbose){var t="Init Queue By External Node";a.warn(t),h(t)}i.resetStates(),i.showStatusActivities&&i.status({fill:"blue",shape:"ring",text:"active empty unit queue"}),e.queueOptions.state="queue reset done"}i.send(e)}),i.on("close",function(e){n.setNodeStatusTo("closed",i),i.queueReadInterval&&clearInterval(i.queueReadInterval),i.queueReadInterval=null,a.deregisterForModbus(i,e)}))})};
//# sourceMappingURL=maps/modbus-queue-info.js.map
