[{"id":"9ac52bc1.20e278","type":"tab","label":"Modbus","disabled":false,"info":""},{"id":"5c70664a.bbfbf8","type":"tab","label":"Declaracion Global","disabled":false,"info":""},{"id":"d91e2557.81f888","type":"tab","label":"Get GVL","disabled":false,"info":""},{"id":"8321392f.a54f88","type":"tab","label":"Servidor OPC","disabled":false,"info":""},{"id":"99c289b3.7c4878","type":"tab","label":"Dashboard","disabled":false,"info":""},{"id":"2dc93c74.901c94","type":"tab","label":"Flow 1","disabled":false,"info":""},{"id":"ba721049.8f30e","type":"modbus-client","z":"","name":"PLC_REAL","clienttype":"tcp","bufferCommands":false,"stateLogEnabled":true,"queueLogEnabled":false,"tcpHost":"192.168.0.10","tcpPort":"502","tcpType":"DEFAULT","serialPort":"/dev/ttyUSB","serialType":"RTU-BUFFERD","serialBaudrate":"9600","serialDatabits":"8","serialStopbits":"1","serialParity":"none","serialConnectionDelay":"100","unit_id":"0","commandDelay":"10","clientTimeout":"1000","reconnectOnTimeout":false,"reconnectTimeout":"2000","parallelUnitIdsAllowed":false},{"id":"c9718344.31eab","type":"ui_tab","z":"","name":"Home","icon":"dashboard","disabled":false,"hidden":false},{"id":"f45032ce.02a07","type":"ui_group","z":"","name":"General","tab":"c9718344.31eab","disp":true,"width":"6","collapse":false},{"id":"6078a428.d44cec","type":"OPCUA-IIoT-Connector","z":"","discoveryUrl":"","endpoint":"opc.tcp://localhost:55380/","keepSessionAlive":true,"loginEnabled":false,"securityPolicy":"None","securityMode":"NONE","name":"Servidor_OPC_Luis","showErrors":false,"individualCerts":false,"publicCertificateFile":"","privateKeyFile":"","defaultSecureTokenLifetime":"","endpointMustExist":false,"autoSelectRightEndpoint":false,"strategyMaxRetry":"","strategyInitialDelay":"","strategyMaxDelay":"","strategyRandomisationFactor":"","requestedSessionTimeout":"","connectionStartDelay":"","reconnectDelay":"","maxBadSessionRequests":"10"},{"id":"c4d01d10.78722","type":"OPCUA-IIoT-Connector","z":"","discoveryUrl":"","endpoint":"opc.tcp://localhost:55380","keepSessionAlive":true,"loginEnabled":false,"securityPolicy":"None","securityMode":"NONE","name":"LOCAL FLEX 80","showErrors":true,"individualCerts":false,"publicCertificateFile":"","privateKeyFile":"","defaultSecureTokenLifetime":"","endpointMustExist":false,"autoSelectRightEndpoint":false,"strategyMaxRetry":"","strategyInitialDelay":"","strategyMaxDelay":"","strategyRandomisationFactor":"","requestedSessionTimeout":"","connectionStartDelay":"","reconnectDelay":"","maxBadSessionRequests":""},{"id":"84f27995.c21168","type":"OPCUA-IIoT-Connector","z":"","discoveryUrl":"","endpoint":"opc.tcp://localhost:55380","keepSessionAlive":true,"loginEnabled":false,"securityPolicy":"None","securityMode":"NONE","name":"LOCAL FLEX 80","showErrors":true,"publicCertificateFile":"","privateKeyFile":"","defaultSecureTokenLifetime":"","endpointMustExist":false,"autoSelectRightEndpoint":false,"strategyMaxRetry":"","strategyInitialDelay":"","strategyMaxDelay":"","strategyRandomisationFactor":"","requestedSessionTimeout":"","connectionStartDelay":"","reconnectDelay":""},{"id":"6733d9ee.6fcac8","type":"OPCUA-IIoT-Connector","z":"","discoveryUrl":"","endpoint":"opc.tcp://192.168.1.105:4840/","keepSessionAlive":true,"loginEnabled":false,"securityPolicy":"None","securityMode":"NONE","name":"LOCAL SERVER","showErrors":false,"individualCerts":false,"publicCertificateFile":"","privateKeyFile":"","defaultSecureTokenLifetime":"","endpointMustExist":false,"autoSelectRightEndpoint":false,"strategyMaxRetry":"","strategyInitialDelay":"","strategyMaxDelay":"","strategyRandomisationFactor":"","requestedSessionTimeout":"","connectionStartDelay":"","reconnectDelay":"","maxBadSessionRequests":"10"},{"id":"ac22a7d0.f6d038","type":"OPCUA-IIoT-Connector","z":"","discoveryUrl":"","endpoint":"opc.tcp://localhost:55380","keepSessionAlive":true,"loginEnabled":false,"securityPolicy":"None","securityMode":"NONE","name":"LOCAL FLEX 80","showErrors":true,"publicCertificateFile":"","privateKeyFile":"","defaultSecureTokenLifetime":"","endpointMustExist":false,"autoSelectRightEndpoint":false,"strategyMaxRetry":"","strategyInitialDelay":"","strategyMaxDelay":"","strategyRandomisationFactor":"","requestedSessionTimeout":"","connectionStartDelay":"","reconnectDelay":""},{"id":"c1778101.6494e","type":"ui_base","theme":{"name":"theme-dark","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#097479","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#4B7930","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"},"themeState":{"base-color":{"default":"#097479","value":"#097479","edited":false},"page-titlebar-backgroundColor":{"value":"#097479","edited":false},"page-backgroundColor":{"value":"#111111","edited":false},"page-sidebar-backgroundColor":{"value":"#000000","edited":false},"group-textColor":{"value":"#0eb8c0","edited":false},"group-borderColor":{"value":"#555555","edited":false},"group-backgroundColor":{"value":"#333333","edited":false},"widget-textColor":{"value":"#eeeeee","edited":false},"widget-backgroundColor":{"value":"#097479","edited":false},"widget-borderColor":{"value":"#333333","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}},"angularTheme":{"primary":"indigo","accents":"blue","warn":"red","background":"grey"}},"site":{"name":"Node-RED Dashboard","hideToolbar":"false","allowSwipe":"false","lockMenu":"false","allowTempTheme":"true","dateFormat":"DD/MM/YYYY","sizes":{"sx":48,"sy":48,"gx":6,"gy":6,"cx":6,"cy":6,"px":0,"py":0}}},{"id":"91ab3909.cf67d8","type":"modbus-client","z":"","name":"PLC_Codesys","clienttype":"tcp","bufferCommands":true,"stateLogEnabled":false,"queueLogEnabled":false,"tcpHost":"192.168.0.7","tcpPort":"502","tcpType":"DEFAULT","serialPort":"/dev/ttyUSB","serialType":"RTU-BUFFERD","serialBaudrate":"9600","serialDatabits":"8","serialStopbits":"1","serialParity":"none","serialConnectionDelay":"100","unit_id":"1","commandDelay":"1","clientTimeout":"1000","reconnectOnTimeout":true,"reconnectTimeout":"2000","parallelUnitIdsAllowed":true},{"id":"b0592e13.0901a","type":"modbus-client","z":"","name":"Modbus Flex Server","clienttype":"tcp","bufferCommands":true,"stateLogEnabled":false,"tcpHost":"127.0.0.1","tcpPort":"15502","tcpType":"DEFAULT","serialPort":"/dev/ttyUSB","serialType":"RTU-BUFFERD","serialBaudrate":"9600","serialDatabits":"8","serialStopbits":"1","serialParity":"none","serialConnectionDelay":"100","unit_id":"1","commandDelay":"1","clientTimeout":"1000","reconnectTimeout":"2000"},{"id":"1d3a4f0f.01aa31","type":"modbus-client","z":"","name":"Modbus Server","clienttype":"tcp","bufferCommands":true,"stateLogEnabled":false,"tcpHost":"127.0.0.1","tcpPort":"14502","tcpType":"DEFAULT","serialPort":"/dev/ttyUSB","serialType":"RTU-BUFFERD","serialBaudrate":"9600","serialDatabits":"8","serialStopbits":"1","serialParity":"none","serialConnectionDelay":"100","unit_id":"1","commandDelay":"1","clientTimeout":"1000","reconnectTimeout":"2000"},{"id":"3b0ef118.b6cf6e","type":"modbus-read","z":"9ac52bc1.20e278","name":"","topic":"","showStatusActivities":false,"logIOActivities":false,"showErrors":false,"unitid":"1","dataType":"HoldingRegister","adr":"0","quantity":"10","rate":"1000","rateUnit":"ms","delayOnStart":false,"startDelayTime":"10","server":"91ab3909.cf67d8","useIOFile":false,"ioFile":"","useIOForPayload":false,"x":130,"y":240,"wires":[["907f026a.8b692","55686dc0.2270d4","1113c774.64f279"],["e89d9ae1.834e58","63c01773.3f32a8"]]},{"id":"e89d9ae1.834e58","type":"modbus-response","z":"9ac52bc1.20e278","name":"","registerShowMax":"20","x":390,"y":300,"wires":[]},{"id":"bfdaaad8.d37708","type":"debug","z":"9ac52bc1.20e278","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":650,"y":140,"wires":[]},{"id":"2123eab.a837f16","type":"comment","z":"9ac52bc1.20e278","name":"Lectura Modbus","info":"Escribe y lee valores sobre un servidor local","x":540,"y":20,"wires":[]},{"id":"2656a538.16889a","type":"modbus-write","z":"9ac52bc1.20e278","name":"","showStatusActivities":true,"showErrors":true,"unitid":"1","dataType":"MHoldingRegisters","adr":"0","quantity":"10","server":"91ab3909.cf67d8","x":400,"y":840,"wires":[["17672016.66fcd"],["458fbcd3.86d154"]]},{"id":"3b8eba40.58d856","type":"inject","z":"9ac52bc1.20e278","name":"","topic":"","payload":"[1,2,3,4,5,6,7,8,9,10]","payloadType":"json","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":160,"y":820,"wires":[["2656a538.16889a"]]},{"id":"17672016.66fcd","type":"debug","z":"9ac52bc1.20e278","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":610,"y":800,"wires":[]},{"id":"458fbcd3.86d154","type":"modbus-response","z":"9ac52bc1.20e278","name":"","registerShowMax":20,"x":610,"y":880,"wires":[]},{"id":"a4e46bec.74d828","type":"inject","z":"9ac52bc1.20e278","name":"","topic":"","payload":"[10,9,8,7,6,5,4,3,2,1]","payloadType":"json","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":160,"y":880,"wires":[["2656a538.16889a"]]},{"id":"b3d01815.8d03c8","type":"function","z":"5c70664a.bbfbf8","name":"Global","func":"global.set(\"Actuador_Global\",msg.payload);\nreturn msg;","outputs":1,"noerr":0,"x":270,"y":160,"wires":[[]]},{"id":"8070e033.7b247","type":"inject","z":"5c70664a.bbfbf8","name":"","topic":"","payload":"false","payloadType":"bool","repeat":"1","crontab":"","once":false,"onceDelay":0.1,"x":90,"y":160,"wires":[["b3d01815.8d03c8"]]},{"id":"6c81230b.05383c","type":"function","z":"d91e2557.81f888","name":"Obtain Data","func":"msg.payload = global.get(\"Bases\");\nreturn msg;\n","outputs":1,"noerr":0,"x":330,"y":140,"wires":[["a05a8417.f3d718"]]},{"id":"eff516c5.f6ffc8","type":"inject","z":"d91e2557.81f888","name":"","topic":"","payload":"","payloadType":"date","repeat":"1","crontab":"","once":false,"onceDelay":0.1,"x":130,"y":140,"wires":[["6c81230b.05383c"]]},{"id":"a05a8417.f3d718","type":"debug","z":"d91e2557.81f888","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":490,"y":140,"wires":[]},{"id":"8b13769f.15cef8","type":"inject","z":"8321392f.a54f88","name":"","topic":"","payload":"","payloadType":"date","repeat":"0.500","crontab":"","once":true,"onceDelay":"0.5","x":230,"y":120,"wires":[["47554e9f.86b4d","bad8bd06.71f0f"]]},{"id":"47554e9f.86b4d","type":"function","z":"8321392f.a54f88","name":"Sacar booleanos","func":"flow.set('I_xA0_Bases',  global.get('Bases').I_xA0_Bases)\nflow.set('I_xA1_Bases',  global.get('Bases').I_xA1_Bases)\nflow.set('I_xEmpty_Bases', global.get('Bases').I_xEmpty_Bases)\nflow.set('I_xBase_Bases', global.get('Bases').I_xEmpty_Bases)\nflow.set('Q_xMinus_Bases', global.get('Bases').I_xEmpty_Bases)\nflow.set('Fin_Operacion_Bases', global.get('Bases').I_xEmpty_Bases)\nflow.set('Fin_Cond_Ini_Bases', global.get('Bases').I_xEmpty_Bases)\nflow.set('Fin_Emergencia_Bases', global.get('Bases').I_xEmpty_Bases)\nflow.set('BasesRestantes', 16)\nflow.set('isoInput3', Math.random() + 13.0)\nflow.set('isoInput4', Math.random() + 14.0)\nflow.set('isoInput5', Math.random() + 15.0)\nflow.set('isoInput6', Math.random() + 16.0)\nflow.set('isoInput7', Math.random() + 17.0)\nflow.set('isoInput8', Math.random() + 18.0)\n\nmsg.payload = flow.get('Actuador');\n\nreturn msg;","outputs":1,"noerr":0,"x":460,"y":120,"wires":[["7a3c8f6d.7b662"]]},{"id":"7a3c8f6d.7b662","type":"debug","z":"8321392f.a54f88","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":720,"y":120,"wires":[]},{"id":"498c8cea.811ad4","type":"function","z":"8321392f.a54f88","name":"set flow context Outputs","func":"flow.set('isoOutput1', Math.random() + 1.0) \nflow.set('isoOutput2', Math.random() + 3.0)\nflow.set('isoOutput3', Math.random() + 3.0)\nflow.set('isoOutput4', Math.random() + 4.0)\nflow.set('isoOutput5', Math.random() + 5.0)\nflow.set('isoOutput6', Math.random() + 6.0)\nflow.set('isoOutput7', Math.random() + 7.0)\nflow.set('isoOutput8', Math.random() + 8.0)\n\nmsg.payload = [\n    flow.get('isoOutput1'),\n    flow.get('isoOutput2'),\n    flow.get('isoOutput3'),\n    flow.get('isoOutput4'),\n    flow.get('isoOutput5'),\n    flow.get('isoOutput6'),\n    flow.get('isoOutput7'),\n    flow.get('isoOutput8'),\n]\nreturn msg;","outputs":1,"noerr":0,"x":480,"y":180,"wires":[["a2a61759.4ae628"]]},{"id":"475c5aea.9124e4","type":"inject","z":"8321392f.a54f88","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"onceDelay":"0.5","x":230,"y":180,"wires":[["498c8cea.811ad4"]]},{"id":"a2a61759.4ae628","type":"debug","z":"8321392f.a54f88","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":720,"y":180,"wires":[]},{"id":"79d970d1.789c1","type":"inject","z":"8321392f.a54f88","name":"","topic":"","payload":"{\"Nombre\":\"Cilindro Bases\",\"I_xA0\":false,\"I_xA1\":false,\"Q_xMinus\":false}","payloadType":"json","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":190,"y":360,"wires":[["7a19b86f.602818"]]},{"id":"5d04f33.351ac0c","type":"debug","z":"8321392f.a54f88","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":590,"y":360,"wires":[]},{"id":"7a19b86f.602818","type":"function","z":"8321392f.a54f88","name":"SacarNobre","func":"msg = msg.Nombre;\nreturn msg;","outputs":1,"noerr":0,"x":370,"y":360,"wires":[["5d04f33.351ac0c"]]},{"id":"907f026a.8b692","type":"function","z":"9ac52bc1.20e278","name":"Volcado a objeto","func":"var bases = {   I_xA0_Bases         :msg.payload[0], \n                I_xA1_Bases         :msg.payload[1], \n                I_xEmpty_Bases      :msg.payload[2],\n                I_xBase_Bases       :msg.payload[3],\n                Q_xMinus_Bases      :msg.payload[4],\n                Fin_Operacion_Bases :msg.payload[5],\n                Fin_Cond_Ini_Bases  :msg.payload[6],\n                Fin_Emergencia_Bases:msg.payload[7]};\nglobal.set(\"Bases\",bases);\nmsg = bases;\nreturn msg;","outputs":1,"noerr":0,"x":450,"y":180,"wires":[[]]},{"id":"bad8bd06.71f0f","type":"function","z":"8321392f.a54f88","name":"Sacar globals","func":"var g = global.get('Bases').I_xA0_Bases;\nmsg.payload = g;\nreturn msg;","outputs":1,"noerr":0,"x":440,"y":60,"wires":[["87ce650a.25be18"]]},{"id":"87ce650a.25be18","type":"debug","z":"8321392f.a54f88","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":630,"y":60,"wires":[]},{"id":"55686dc0.2270d4","type":"function","z":"9ac52bc1.20e278","name":"Sacar bits","func":"// Sacamos el entero que queremos, nos inetresan los bits\nlet lectura =  parseInt(msg.payload[0].toString(2));\n\nvar bases = {   I_xA0_Bases         :Boolean(lectura & 1), \n                I_xA1_Bases         :Boolean(lectura & 2), \n                I_xEmpty_Bases      :Boolean(lectura & 4),\n                I_xBase_Bases       :Boolean(lectura & 8),\n                Q_xMinus_Bases      :Boolean(lectura & 16),\n                Fin_Operacion_Bases :Boolean(lectura & 32),\n                Fin_Cond_Ini_Bases  :Boolean(lectura & 64),\n                Fin_Emergencia_Bases:Boolean(lectura & 128)};\nglobal.set(\"Bases\",bases);\nmsg = bases;\nreturn msg","outputs":1,"noerr":0,"x":440,"y":140,"wires":[["bfdaaad8.d37708"]]},{"id":"485850b3.583f9","type":"modbus-getter","z":"9ac52bc1.20e278","name":"Getter_PLC","showStatusActivities":false,"showErrors":false,"logIOActivities":false,"unitid":"1","dataType":"HoldingRegister","adr":"10","quantity":"10","server":"ba721049.8f30e","useIOFile":false,"ioFile":"","useIOForPayload":false,"emptyMsgOnFail":false,"x":310,"y":520,"wires":[["5916a2e5.7039bc","543596a4.7446d8"],["fc43e38d.d827d"]]},{"id":"8dec456c.a0f548","type":"inject","z":"9ac52bc1.20e278","name":"","topic":"","payload":"","payloadType":"date","repeat":"1","crontab":"","once":false,"onceDelay":0.1,"x":130,"y":520,"wires":[["485850b3.583f9"]]},{"id":"fc43e38d.d827d","type":"debug","z":"9ac52bc1.20e278","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":530,"y":540,"wires":[]},{"id":"5916a2e5.7039bc","type":"function","z":"9ac52bc1.20e278","name":"Sacar bits","func":"// Sacamos el entero que queremos, nos inetresan los bits\nlet lectura =  parseInt(msg.payload[0].toString(2));\n\nvar bases = {   I_xA0_Bases         :Boolean(lectura & 1), \n                I_xA1_Bases         :Boolean(lectura & 2), \n                I_xEmpty_Bases      :Boolean(lectura & 4),\n                I_xBase_Bases       :Boolean(lectura & 8),\n                Q_xMinus_Bases      :Boolean(lectura & 16),\n                Fin_Operacion_Bases :Boolean(lectura & 32),\n                Fin_Cond_Ini_Bases  :Boolean(lectura & 64),\n                Fin_Emergencia_Bases:Boolean(lectura & 128)};\nglobal.set(\"Bases\",bases);\nmsg = bases;\nreturn msg","outputs":1,"noerr":0,"x":540,"y":460,"wires":[[]]},{"id":"1113c774.64f279","type":"function","z":"9ac52bc1.20e278","name":"Global","func":"// Sacamos el entero que queremos, nos inetresan los bits\nlet lectura =  parseInt(msg.payload[0].toString(2));\n\nvar PLC_SIM = {   Index1         :msg.payload[0], \n                Index2         :msg.payload[1], \n                };\nglobal.set(\"PLC_SIM\",PLC_SIM);\nmsg = PLC_SIM;\nreturn msg","outputs":1,"noerr":0,"x":410,"y":220,"wires":[["9c96fd21.5859b"]]},{"id":"3bc00b9f.a12b94","type":"function","z":"99c289b3.7c4878","name":"Obtain Data","func":"msg.payload = global.get(\"PLC_SIM\").Index1;\nreturn msg;\n","outputs":1,"noerr":0,"x":310,"y":220,"wires":[["5fc4887b.500f68","1d97f72e.ec98f9"]]},{"id":"5fc4887b.500f68","type":"ui_gauge","z":"99c289b3.7c4878","name":"","group":"f45032ce.02a07","order":1,"width":0,"height":0,"gtype":"wave","title":"PLC Codesys","label":"units","format":"{{value}}","min":0,"max":10,"colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","x":580,"y":220,"wires":[]},{"id":"1d97f72e.ec98f9","type":"debug","z":"99c289b3.7c4878","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":540,"y":300,"wires":[]},{"id":"13fbd7ff.c1be18","type":"inject","z":"99c289b3.7c4878","name":"","topic":"","payload":"","payloadType":"date","repeat":"1","crontab":"","once":false,"onceDelay":0.1,"x":110,"y":220,"wires":[["3bc00b9f.a12b94","c76aff9e.4e472"]]},{"id":"63c01773.3f32a8","type":"debug","z":"9ac52bc1.20e278","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":580,"y":260,"wires":[]},{"id":"9c96fd21.5859b","type":"debug","z":"9ac52bc1.20e278","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":550,"y":220,"wires":[]},{"id":"c76aff9e.4e472","type":"function","z":"99c289b3.7c4878","name":"Obtain Data","func":"msg.payload = global.get(\"PLC_REAL\").Index1;\nreturn msg;\n","outputs":1,"noerr":0,"x":310,"y":380,"wires":[["8a4f5825.112298","e4770952.c099a8"]]},{"id":"8a4f5825.112298","type":"ui_gauge","z":"99c289b3.7c4878","name":"","group":"f45032ce.02a07","order":1,"width":0,"height":0,"gtype":"wave","title":"PLC Real","label":"units","format":"{{value}}","min":0,"max":10,"colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","x":560,"y":380,"wires":[]},{"id":"e4770952.c099a8","type":"debug","z":"99c289b3.7c4878","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":540,"y":460,"wires":[]},{"id":"543596a4.7446d8","type":"function","z":"9ac52bc1.20e278","name":"Global","func":"// Sacamos el entero que queremos, nos inetresan los bits\nlet lectura =  parseInt(msg.payload[0].toString(2));\n\nvar PLC_SIM = {   Index1         :msg.payload[0], \n                Index2         :msg.payload[1], \n                };\nglobal.set(\"PLC_REAL\",PLC_SIM);\nmsg = PLC_SIM;\nreturn msg","outputs":1,"noerr":0,"x":530,"y":500,"wires":[["22f3ab9a.df3174"]]},{"id":"22f3ab9a.df3174","type":"debug","z":"9ac52bc1.20e278","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":670,"y":500,"wires":[]},{"id":"a47964d9.f98938","type":"modbus-write","z":"9ac52bc1.20e278","name":"","showStatusActivities":true,"showErrors":true,"unitid":"0","dataType":"MHoldingRegisters","adr":"0","quantity":"10","server":"ba721049.8f30e","x":400,"y":1060,"wires":[["1ac6cef1.741bd1"],["77bc1f57.8cef4"]]},{"id":"c6f8ea0a.8312e8","type":"inject","z":"9ac52bc1.20e278","name":"","topic":"","payload":"[1,2,3,4,5,6,7,8,9,10]","payloadType":"json","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":160,"y":1040,"wires":[["a47964d9.f98938"]]},{"id":"1ac6cef1.741bd1","type":"debug","z":"9ac52bc1.20e278","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":610,"y":1020,"wires":[]},{"id":"77bc1f57.8cef4","type":"modbus-response","z":"9ac52bc1.20e278","name":"","registerShowMax":20,"x":610,"y":1100,"wires":[]},{"id":"8a6f81ce.a05e1","type":"inject","z":"9ac52bc1.20e278","name":"","topic":"","payload":"[10,9,8,7,6,5,4,3,2,1]","payloadType":"json","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":160,"y":1100,"wires":[["a47964d9.f98938"]]},{"id":"9858f322.1526e","type":"OPCUA-IIoT-Listener","z":"9ac52bc1.20e278","connector":"6078a428.d44cec","action":"subscribe","queueSize":10,"name":"","topic":"","justValue":true,"useGroupItems":false,"showStatusActivities":false,"showErrors":false,"x":300,"y":1280,"wires":[["95ab8185.9f81b"]]},{"id":"95ab8185.9f81b","type":"debug","z":"9ac52bc1.20e278","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":470,"y":1280,"wires":[]},{"id":"a6170117.fe213","type":"OPCUA-IIoT-Inject","z":"9ac52bc1.20e278","injectType":"read","payloadType":"date","topic":"","repeat":"0.5","crontab":"","once":false,"startDelay":"","name":"","payload":"","addressSpaceItems":[{"name":"","nodeId":"ns=1;s=1002","datatypeName":""}],"x":130,"y":1280,"wires":[["9858f322.1526e"]]},{"id":"fefa302.64b12d","type":"comment","z":"9ac52bc1.20e278","name":"Lectura OPC","info":"","x":110,"y":1220,"wires":[]},{"id":"85d0809f.64607","type":"comment","z":"9ac52bc1.20e278","name":"PLC Simulado en Codesys","info":"Escribe y lee valores sobre un servidor local","x":150,"y":80,"wires":[]},{"id":"592a231a.bf907c","type":"comment","z":"9ac52bc1.20e278","name":"PLC Real PM583-ETH","info":"Escribe y lee valores sobre un servidor local","x":140,"y":440,"wires":[]},{"id":"95d0b1c1.e76c1","type":"comment","z":"9ac52bc1.20e278","name":"Escritura Modbus","info":"Escribe y lee valores sobre un servidor local","x":540,"y":680,"wires":[]},{"id":"751493ee.a476bc","type":"comment","z":"9ac52bc1.20e278","name":"PLC Simulado en Codesys","info":"Escribe y lee valores sobre un servidor local","x":150,"y":760,"wires":[]},{"id":"77769199.3d461","type":"comment","z":"9ac52bc1.20e278","name":"PLC Real PM583-ETH","info":"Escribe y lee valores sobre un servidor local","x":140,"y":980,"wires":[]},{"id":"954f68a3.3ce1c8","type":"OPCUA-IIoT-Flex-Server","z":"8321392f.a54f88","port":"55380","endpoint":"","acceptExternalCommands":true,"maxAllowedSessionNumber":"","maxConnectionsPerEndpoint":"","maxAllowedSubscriptionNumber":"","alternateHostname":"","name":"Servidor_OPC_Luis","showStatusActivities":false,"showErrors":false,"allowAnonymous":true,"individualCerts":false,"isAuditing":false,"serverDiscovery":true,"users":[],"xmlsets":[],"publicCertificateFile":"","privateCertificateFile":"","registerServerMethod":"1","discoveryServerEndpointUrl":"","capabilitiesForMDNS":"","maxNodesPerRead":1000,"maxNodesPerBrowse":2000,"delayToClose":1000,"addressSpaceScript":"function constructAddressSpace(server, addressSpace, eventObjects, done) {\n    \n    // Creamos constantes para algunos objetos y implificar la escritura\n    const miopcua =coreServer.core.nodeOPCUA; \t\t\t\t        // Acceso a nodeopcua\n    const LocalizedText = coreServer.core.nodeOPCUA.LocalizedText \t// Para simplificar textos localizados\n    const namespace = addressSpace.getOwnNamespace()\t\t\t    // Espacio de nombres\n\n    \n    const Variant = miopcua.Variant;\n    const DataType = miopcua.DataType;\n    const DataValue = miopcua.DataValue;\n  \n    var flexServerInternals = this;\n    \n    const rootFolder = addressSpace.findNode(\"RootFolder\");\n\n    node.warn('Espacio de direcciones gateway PI 1')\n    \n    // Uso de una variable local para mantener un valor sobre el que leer/escribir\n    var fake=69.0\n     //----------------------------------------------------------------------\n    //**************CARPETILLAS*********************\n  \n    const Planta40 = namespace.addFolder(rootFolder, {\n        \"browseName\": \"Planta Industria 4.0\"\n      });\n    \n      const control_central = namespace.addFolder(Planta40, {\n        \"browseName\": \"Control Planta\"\n      });\n    \n      const stations = namespace.addFolder(Planta40, {\n        \"browseName\": \"Estaciones\"\n      });\n    \n    \n    let rpi = namespace.addObject({\n        browseName: 'RPi Gateway',\n        description: 'Objeto que representa una RPi haciendo de gateway IoT',\n        organizedBy: addressSpace.rootFolder.objects,\n        notifierOf: addressSpace.rootFolder.objects.server\n    })\n    // AÃ±adimos el mÃ©todo\n    const m1=namespace.addMethod(rpi,{\n        browseName: \"CalcSen\",\n        nodeID:\"ns=1;s=CalcSen\",\n        inputArguments:[{\n            name: \"Angulo (radianes)\",\n            description: {text: \"Angulo en radianes para el seno\"},\n            dataType: 'Double'\n        }],\n        outputArguments:[{\n            name: \"Seno\",\n            description: {text: \"Valor del seno\"},\n            dataType: 'String'\n        }]\n    })\n    \n    // Y ahora lo atamos a una funciÃ³n\n    m1.bindMethod(function(inputArguments,context,callback) {\n        const angulo = inputArguments[0].value; // Valor del argumento\n\t    // Creamos un objeto para el resultado\n        const callMethodResult = {\n            statusCode: miopcua.StatusCodes.Good,\n            outputArguments: [{\n                    dataType: 'String',\n                    value : 'OK'\n            }]\n        };\n\n        callback(null,callMethodResult);\n    });\n\n     var prueba = 0;\n    //\n    //----------------------------------------------------------\n    //\n    //**************ALIMENTADOR DE BASES*********************\n    const E_Bases = namespace.addObject({\n      browseName: 'Alimentador de Bases',\n      description: 'Estacion N1 de la planta',\n      organizedBy: stations,\n      notifierOf: addressSpace.rootFolder.objects.server\n    })\n  \n    const I_xA0_Bases = namespace.addVariable({\n      componentOf: E_Bases,\n      \"browseName\": \"I_xA0_Bases\",\n      \"nodeId\": \"ns=1;s=1002\",\n      \"dataType\": DataType.Boolean,\n      \"value\": {\n        \"get\": function () {\n          return new Variant({\n            \"dataType\": DataType.Boolean,\n            \"value\": flexServerInternals.sandboxFlowContext.get(\"I_xBase_Bases\")\n          });\n        },\n      }\n    });\n  \n    const I_xA1_Bases = namespace.addVariable({\n      componentOf: E_Bases,\n      \"browseName\": \"I_xA1_Bases\",\n      \"nodeId\": \"ns=1;s=I_xA1_Bases\",\n      \"dataType\": DataType.Byte,\n      \"value\": {\n        \"get\": function () {\n          return new Variant({\n            \"dataType\": DataType.Byte,\n            \"value\": prueba\n          });\n        },\n        \"set\": function (variant) {\n                  prueba = variant.value\n                  return opcua.StatusCodes.Good\n              }\n      }\n    });\n    \n    // AÃ±adimos el mÃ©todo\n      const m2=namespace.addMethod(stations,{\n          browseName: \"CalcSen\",\n          nodeID:\"ns=1;s=CalcSen\",\n          inputArguments:[{\n              name: \"Angulo (radianes)\",\n              description: {text: \"Angulo en radianes para el seno\"},\n              dataType: 'Double'\n          }],\n          outputArguments:[{\n              name: \"Seno\",\n              description: {text: \"Valor del seno\"},\n              dataType: 'Double'\n          }]\n      })\n      \n      // Y ahora lo atamos a una funciÃ³n\n      m2.bindMethod(function(inputArguments,context,callback) {\n          const angulo = inputArguments[0].value; // Valor del argumento\n          // Creamos un objeto para el resultado\n          const callMethodResult = {\n              statusCode: miopcua.StatusCodes.Good,\n              outputArguments: [{\n                      dataType: 'Double',\n                      value : Math.sin(angulo)\n              }]\n          };\n  \n          callback(null,callMethodResult);\n      });\n  \n    //\n    //------------------------------------------------------------------------------\n    //\n    // SISTEMA DE TRANSPORTE\n    const Transporte = namespace.addObject({\n      browseName: 'Sistema de Transporte',\n      description: 'Sistema de transporte de la planta',\n      organizedBy: stations,\n      notifierOf: addressSpace.rootFolder.objects.server\n    })\n  \n    const Driver = namespace.addObject({\n      browseName: 'Driver',\n      description: 'Driver del sistema de transporte',\n      organizedBy: Transporte,\n      notifierOf: addressSpace.rootFolder.objects.server\n    })\n    \n    const Recoger=namespace.addMethod(Transporte,{\n          browseName: \"Recoger\",\n          nodeID:\"ns=1;s=Recoger\",\n          inputArguments:[{\n              name: \"Estacion\",\n              description: {text: \"Estacion donde se desea hacer la recogida\"},\n              dataType: DataType.Byte\n          }],\n          outputArguments:[{\n              name: \"Status\",\n              description: {text: \"Resultado de la Operacion\"},\n              dataType: 'String'\n          }]\n      })\n      \n      // Y ahora lo atamos a una funciÃ³n\n      Recoger.bindMethod(function(inputArguments,context,callback) {\n          prueba = inputArguments[0].value;\n          const callMethodResult2 = {\n              statusCode: miopcua.StatusCodes.Good,\n              outputArguments: [{\n                      dataType: 'String',\n                      value : flexServerInternals.sandboxFlowContext.get(\"Status\")\n              }]\n          };\n      \n          callback(null,callMethodResult2);\n      });\n   \n   done()\n}","x":560,"y":240,"wires":[[]]},{"id":"1594ecab.15e133","type":"function","z":"8321392f.a54f88","name":"","func":"flow.set('Status',  'Wait')\nmsg.payload = flow.get('Status')\nreturn msg;","outputs":1,"noerr":0,"x":300,"y":520,"wires":[["661b0050.7f016"]]},{"id":"661b0050.7f016","type":"debug","z":"8321392f.a54f88","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":510,"y":520,"wires":[]},{"id":"89c49411.f08178","type":"function","z":"8321392f.a54f88","name":"","func":"flow.set('Status',  'OK!')\nmsg.payload = flow.get('Status')\nreturn msg;","outputs":1,"noerr":0,"x":290,"y":580,"wires":[["661b0050.7f016"]]},{"id":"c47a6151.8907c","type":"inject","z":"8321392f.a54f88","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":140,"y":520,"wires":[["1594ecab.15e133"]]},{"id":"25224268.333a5e","type":"inject","z":"8321392f.a54f88","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":120,"y":580,"wires":[["89c49411.f08178"]]}]